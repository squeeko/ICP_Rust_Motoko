import type { ManageNeuron as PbManageNeuron } from "@dfinity/nns-proto";
import type { NeuronId } from "../../types/common";
import type { AddHotKeyRequest, DisburseRequest, FollowRequest, MergeMaturityRequest, RemoveHotKeyRequest, SpawnRequest } from "../../types/governance_converters";
export declare const fromAddHotKeyRequest: (request: AddHotKeyRequest) => Promise<PbManageNeuron>;
export declare const fromRemoveHotKeyRequest: (request: RemoveHotKeyRequest) => Promise<PbManageNeuron>;
export declare const fromIncreaseDissolveDelayRequest: ({ neuronId, additionalDissolveDelaySeconds, }: {
    neuronId: NeuronId;
    additionalDissolveDelaySeconds: number;
}) => Promise<PbManageNeuron>;
export declare const fromStartDissolvingRequest: (neuronId: NeuronId) => Promise<PbManageNeuron>;
export declare const fromStopDissolvingRequest: (neuronId: NeuronId) => Promise<PbManageNeuron>;
export declare const fromCommunityFundRequest: (neuronId: NeuronId) => Promise<PbManageNeuron>;
export declare const fromDisburseRequest: (request: DisburseRequest) => Promise<PbManageNeuron>;
export declare const fromMergeMaturityRequest: (request: MergeMaturityRequest) => Promise<PbManageNeuron>;
export declare const fromSpawnRequest: (request: SpawnRequest) => Promise<PbManageNeuron>;
export declare const fromFollowRequest: (request: FollowRequest) => Promise<PbManageNeuron>;
