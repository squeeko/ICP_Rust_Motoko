import type { GovernanceError as GovernanceErrorDetail } from "../../candid/governance";
export declare abstract class StakeNeuronError extends Error {
}
export declare class CouldNotClaimNeuronError extends StakeNeuronError {
}
export declare class InsufficientAmountError extends StakeNeuronError {
    readonly minimumAmount: bigint;
    constructor(minimumAmount: bigint);
}
export declare class UnrecognizedTypeError extends Error {
}
export declare class GovernanceError extends Error {
    readonly detail: GovernanceErrorDetail;
    constructor(detail: GovernanceErrorDetail);
}
export declare class InvalidAccountIDError extends Error {
}
/**
 * An error used to ensure at compile-time that it's never reached.
 */
export declare class UnsupportedValueError extends Error {
    constructor(value: never);
}
export declare class FeatureNotSupportedError extends Error {
}
