"use strict";var lr=Object.create;var et=Object.defineProperty;var mr=Object.getOwnPropertyDescriptor;var fr=Object.getOwnPropertyNames;var Nr=Object.getPrototypeOf,wr=Object.prototype.hasOwnProperty;var Rr=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),gr=(e,t)=>{for(var n in t)et(e,n,{get:t[n],enumerable:!0})},Vn=(e,t,n,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of fr(t))!wr.call(e,r)&&r!==n&&et(e,r,{get:()=>t[r],enumerable:!(o=mr(t,r))||o.enumerable});return e};var Mn=(e,t,n)=>(n=e!=null?lr(Nr(e)):{},Vn(t||!e||!e.__esModule?et(n,"default",{value:e,enumerable:!0}):n,e)),yr=e=>Vn(et({},"__esModule",{value:!0}),e);var In=Rr((Xs,Zn)=>{Zn.exports=require("crypto").randomBytes});var Os={};gr(Os,{AccountIdentifier:()=>q,BadFeeError:()=>it,CouldNotClaimNeuronError:()=>ze,FeatureNotSupportedError:()=>Je,GenesisTokenCanister:()=>Ve,GovernanceCanister:()=>Me,GovernanceError:()=>H,ICP:()=>Te,InsufficientAmountError:()=>$e,InsufficientFundsError:()=>Qe,InvalidAccountIDError:()=>Ce,InvalidSenderError:()=>at,LedgerCanister:()=>Fe,NeuronState:()=>Rn,NnsFunction:()=>Gn,ProposalRewardStatus:()=>Un,ProposalStatus:()=>Hn,SnsWasmCanister:()=>qe,StakeNeuronError:()=>je,SubAccount:()=>L,Topic:()=>En,TransferError:()=>te,TxCreatedInFutureError:()=>Ye,TxDuplicateError:()=>Ze,TxTooOldError:()=>Xe,UnrecognizedTypeError:()=>ee,UnsupportedValueError:()=>S,Vote:()=>Wn,accountIdentifierFromBytes:()=>bn,accountIdentifierToBytes:()=>On,checkAccountId:()=>lt,ineligibleNeurons:()=>pr,mapTransferError:()=>gn,mapTransferProtoError:()=>yn,principalToAccountIdentifier:()=>hn,votableNeurons:()=>ys,votedNeurons:()=>vs});module.exports=yr(Os);var Ne=require("@dfinity/utils");function vr(e,...t){if(!(e instanceof Uint8Array))throw new Error("Expected Uint8Array");if(t.length>0&&!t.includes(e.length))throw new Error(`Expected Uint8Array of length ${t}, not of length=${e.length}`)}function ln(e,t=!0){if(e.destroyed)throw new Error("Hash instance has been destroyed");if(t&&e.finished)throw new Error("Hash#digest() has already been called")}function Fn(e,t){vr(e);let n=t.outputLen;if(e.length<n)throw new Error(`digestInto() expects output buffer of length at least ${n}`)}var Or=e=>e instanceof Uint8Array;var nt=e=>new DataView(e.buffer,e.byteOffset,e.byteLength),I=(e,t)=>e<<32-t|e>>>t,br=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;if(!br)throw new Error("Non little-endian hardware is not supported");function hr(e){if(typeof e!="string")throw new Error(`utf8ToBytes expected string, got ${typeof e}`);return new Uint8Array(new TextEncoder().encode(e))}function mn(e){if(typeof e=="string"&&(e=hr(e)),!Or(e))throw new Error(`expected Uint8Array, got ${typeof e}`);return e}var tt=class{clone(){return this._cloneInto()}},Ss={}.toString;function fn(e){let t=o=>e().update(mn(o)).digest(),n=e();return t.outputLen=n.outputLen,t.blockLen=n.blockLen,t.create=()=>e(),t}function Sr(e,t,n,o){if(typeof e.setBigUint64=="function")return e.setBigUint64(t,n,o);let r=BigInt(32),s=BigInt(4294967295),a=Number(n>>r&s),d=Number(n&s),p=o?4:0,N=o?0:4;e.setUint32(t+p,a,o),e.setUint32(t+N,d,o)}var ot=class extends tt{constructor(t,n,o,r){super(),this.blockLen=t,this.outputLen=n,this.padOffset=o,this.isLE=r,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(t),this.view=nt(this.buffer)}update(t){ln(this);let{view:n,buffer:o,blockLen:r}=this;t=mn(t);let s=t.length;for(let a=0;a<s;){let d=Math.min(r-this.pos,s-a);if(d===r){let p=nt(t);for(;r<=s-a;a+=r)this.process(p,a);continue}o.set(t.subarray(a,a+d),this.pos),this.pos+=d,a+=d,this.pos===r&&(this.process(n,0),this.pos=0)}return this.length+=t.length,this.roundClean(),this}digestInto(t){ln(this),Fn(t,this),this.finished=!0;let{buffer:n,view:o,blockLen:r,isLE:s}=this,{pos:a}=this;n[a++]=128,this.buffer.subarray(a).fill(0),this.padOffset>r-a&&(this.process(o,0),a=0);for(let _=a;_<r;_++)n[_]=0;Sr(o,r-8,BigInt(this.length*8),s),this.process(o,0);let d=nt(t),p=this.outputLen;if(p%4)throw new Error("_sha2: outputLen should be aligned to 32bit");let N=p/4,l=this.get();if(N>l.length)throw new Error("_sha2: outputLen bigger than state");for(let _=0;_<N;_++)d.setUint32(4*_,l[_],s)}digest(){let{buffer:t,outputLen:n}=this;this.digestInto(t);let o=t.slice(0,n);return this.destroy(),o}_cloneInto(t){t||(t=new this.constructor),t.set(...this.get());let{blockLen:n,buffer:o,length:r,finished:s,destroyed:a,pos:d}=this;return t.length=r,t.pos=d,t.finished=s,t.destroyed=a,r%n&&t.buffer.set(o),t}};var xr=(e,t,n)=>e&t^~e&n,Tr=(e,t,n)=>e&t^e&n^t&n,Pr=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),me=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),fe=new Uint32Array(64),rt=class extends ot{constructor(){super(64,32,8,!1),this.A=me[0]|0,this.B=me[1]|0,this.C=me[2]|0,this.D=me[3]|0,this.E=me[4]|0,this.F=me[5]|0,this.G=me[6]|0,this.H=me[7]|0}get(){let{A:t,B:n,C:o,D:r,E:s,F:a,G:d,H:p}=this;return[t,n,o,r,s,a,d,p]}set(t,n,o,r,s,a,d,p){this.A=t|0,this.B=n|0,this.C=o|0,this.D=r|0,this.E=s|0,this.F=a|0,this.G=d|0,this.H=p|0}process(t,n){for(let _=0;_<16;_++,n+=4)fe[_]=t.getUint32(n,!1);for(let _=16;_<64;_++){let w=fe[_-15],f=fe[_-2],g=I(w,7)^I(w,18)^w>>>3,c=I(f,17)^I(f,19)^f>>>10;fe[_]=c+fe[_-7]+g+fe[_-16]|0}let{A:o,B:r,C:s,D:a,E:d,F:p,G:N,H:l}=this;for(let _=0;_<64;_++){let w=I(d,6)^I(d,11)^I(d,25),f=l+w+xr(d,p,N)+Pr[_]+fe[_]|0,c=(I(o,2)^I(o,13)^I(o,22))+Tr(o,r,s)|0;l=N,N=p,p=d,d=a+f|0,a=s,s=r,r=o,o=f+c|0}o=o+this.A|0,r=r+this.B|0,s=s+this.C|0,a=a+this.D|0,d=d+this.E|0,p=p+this.F|0,N=N+this.G|0,l=l+this.H|0,this.set(o,r,s,a,d,p,N,l)}roundClean(){fe.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}},Nn=class extends rt{constructor(){super(),this.A=-1056596264,this.B=914150663,this.C=812702999,this.D=-150054599,this.E=-4191439,this.F=1750603025,this.G=1694076839,this.H=-1090891868,this.outputLen=28}},qn=fn(()=>new rt),st=fn(()=>new Nn);var wn=require("@dfinity/agent"),y=()=>import("@dfinity/nns-proto"),Pe=async({agent:e,canisterId:t,methodName:n,arg:o})=>{let r=await e.call(t,{methodName:n,arg:o,effectiveCanisterId:t});if(!r.response.ok)throw new Error(["Call failed:",`  Method: ${n}`,`  Canister ID: ${t}`,`  Request ID: ${r.requestId}`,`  HTTP status code: ${r.response.status}`,`  HTTP status text: ${r.response.statusText}`].join(`
`));let s=await wn.polling.pollForResponse(e,t,r.requestId,wn.polling.defaultStrategy());return new Uint8Array(s)},Bn=async({agent:e,canisterId:t,methodName:n,arg:o})=>{let r=await e.query(t,{methodName:n,arg:o});if(r.status=="rejected")throw new Error(["Call failed:",`  Method: ${n}`,`  Canister ID: ${t}`,`  HTTP status code: ${r.reject_code}`,`  HTTP status text: ${r.reject_message}`].join(`
`));return new Uint8Array(r.reply.arg)};var q=class{constructor(t){this.bytes=t}static fromHex(t){return new q(Uint8Array.from(Buffer.from(t,"hex")))}static fromPrincipal({principal:t,subAccount:n=L.ZERO}){let o=(0,Ne.asciiStringToByteArray)(`
account-id`),r=st.create();r.update((0,Ne.arrayOfNumberToUint8Array)([...o,...t.toUint8Array(),...n.toUint8Array()]));let s=r.digest(),a=(0,Ne.bigEndianCrc32)(s),d=new Uint8Array([...a,...s]);return new q(d)}async toProto(){let{AccountIdentifier:t}=await y(),n=new t;return n.setHash(this.bytes),n}toHex(){return(0,Ne.uint8ArrayToHexString)(this.bytes)}toUint8Array(){return this.bytes}toNumbers(){return Array.from(this.bytes)}toAccountIdentifierHash(){return{hash:this.toUint8Array()}}},ke=class{constructor(t){this.bytes=t}static fromBytes(t){return t.length!=32?Error("Subaccount length must be 32-bytes"):new ke(t)}static fromPrincipal(t){let n=new Uint8Array(32).fill(0),o=t.toUint8Array();n[0]=o.length;for(let r=0;r<o.length;r++)n[1+r]=o[r];return new ke(n)}static fromID(t){if(t<0||t>255)throw"Subaccount ID must be >= 0 and <= 255";let n=new Uint8Array(32).fill(0);return n[31]=t,new ke(n)}toUint8Array(){return this.bytes}},L=ke;L.ZERO=ke.fromID(0);var Rn=(s=>(s[s.Unspecified=0]="Unspecified",s[s.Locked=1]="Locked",s[s.Dissolving=2]="Dissolving",s[s.Dissolved=3]="Dissolved",s[s.Spawning=4]="Spawning",s))(Rn||{}),En=(c=>(c[c.Unspecified=0]="Unspecified",c[c.ManageNeuron=1]="ManageNeuron",c[c.ExchangeRate=2]="ExchangeRate",c[c.NetworkEconomics=3]="NetworkEconomics",c[c.Governance=4]="Governance",c[c.NodeAdmin=5]="NodeAdmin",c[c.ParticipantManagement=6]="ParticipantManagement",c[c.SubnetManagement=7]="SubnetManagement",c[c.NetworkCanisterManagement=8]="NetworkCanisterManagement",c[c.Kyc=9]="Kyc",c[c.NodeProviderRewards=10]="NodeProviderRewards",c[c.SnsDecentralizationSale=11]="SnsDecentralizationSale",c[c.SubnetReplicaVersionManagement=12]="SubnetReplicaVersionManagement",c[c.ReplicaVersionManagement=13]="ReplicaVersionManagement",c[c.SnsAndCommunityFund=14]="SnsAndCommunityFund",c))(En||{}),Un=(s=>(s[s.Unknown=0]="Unknown",s[s.AcceptVotes=1]="AcceptVotes",s[s.ReadyToSettle=2]="ReadyToSettle",s[s.Settled=3]="Settled",s[s.Ineligible=4]="Ineligible",s))(Un||{}),Hn=(a=>(a[a.Unknown=0]="Unknown",a[a.Open=1]="Open",a[a.Rejected=2]="Rejected",a[a.Accepted=3]="Accepted",a[a.Executed=4]="Executed",a[a.Failed=5]="Failed",a))(Hn||{}),Wn=(o=>(o[o.Unspecified=0]="Unspecified",o[o.Yes=1]="Yes",o[o.No=2]="No",o))(Wn||{}),Gn=(i=>(i[i.Unspecified=0]="Unspecified",i[i.CreateSubnet=1]="CreateSubnet",i[i.AddNodeToSubnet=2]="AddNodeToSubnet",i[i.NnsCanisterInstall=3]="NnsCanisterInstall",i[i.NnsCanisterUpgrade=4]="NnsCanisterUpgrade",i[i.BlessReplicaVersion=5]="BlessReplicaVersion",i[i.RecoverSubnet=6]="RecoverSubnet",i[i.UpdateConfigOfSubnet=7]="UpdateConfigOfSubnet",i[i.AssignNoid=8]="AssignNoid",i[i.NnsRootUpgrade=9]="NnsRootUpgrade",i[i.IcpXdrConversionRate=10]="IcpXdrConversionRate",i[i.UpdateSubnetReplicaVersion=11]="UpdateSubnetReplicaVersion",i[i.ClearProvisionalWhitelist=12]="ClearProvisionalWhitelist",i[i.RemoveNodesFromSubnet=13]="RemoveNodesFromSubnet",i[i.SetAuthorizedSubnetworks=14]="SetAuthorizedSubnetworks",i[i.SetFirewallConfig=15]="SetFirewallConfig",i[i.UpdateNodeOperatorConfig=16]="UpdateNodeOperatorConfig",i[i.StopOrStartNnsCanister=17]="StopOrStartNnsCanister",i[i.RemoveNodes=18]="RemoveNodes",i[i.UninstallCode=19]="UninstallCode",i[i.UpdateNodeRewardsTable=20]="UpdateNodeRewardsTable",i[i.AddOrRemoveDataCenters=21]="AddOrRemoveDataCenters",i[i.UpdateUnassignedNodesConfig=22]="UpdateUnassignedNodesConfig",i[i.RemoveNodeOperators=23]="RemoveNodeOperators",i[i.RerouteCanisterRanges=24]="RerouteCanisterRanges",i[i.AddFirewallRules=25]="AddFirewallRules",i[i.RemoveFirewallRules=26]="RemoveFirewallRules",i[i.UpdateFirewallRules=27]="UpdateFirewallRules",i[i.PrepareCanisterMigration=28]="PrepareCanisterMigration",i[i.CompleteCanisterMigration=29]="CompleteCanisterMigration",i[i.AddSnsWasm=30]="AddSnsWasm",i[i.ChangeSubnetMembership=31]="ChangeSubnetMembership",i[i.UpdateSubnetType=32]="UpdateSubnetType",i[i.ChangeSubnetTypeAssignment=33]="ChangeSubnetTypeAssignment",i[i.UpdateSnsWasmSnsSubnetIds=34]="UpdateSnsWasmSnsSubnetIds",i[i.UpdateAllowedPrincipals=35]="UpdateAllowedPrincipals",i[i.RetireReplicaVersion=36]="RetireReplicaVersion",i[i.InsertSnsWasmUpgradePathEntries=37]="InsertSnsWasmUpgradePathEntries",i[i.UpdateElectedReplicaVersions=38]="UpdateElectedReplicaVersions",i[i.BitcoinSetConfig=39]="BitcoinSetConfig",i))(Gn||{});var je=class extends Error{},ze=class extends je{},$e=class extends je{constructor(n){super();this.minimumAmount=n}},ee=class extends Error{},H=class extends Error{constructor(n){super();this.detail=n}},Ce=class extends Error{},S=class extends Error{constructor(t){super("Unsupported value: "+t)}},Je=class extends Error{};var Kn=require("@dfinity/utils"),te=class extends Error{},at=class extends te{},Qe=class extends te{constructor(n){super();this.balance=n}},Xe=class extends te{constructor(n){super();this.allowed_window_secs=n}},Ye=class extends te{},Ze=class extends te{constructor(n){super();this.duplicateOf=n}},it=class extends te{constructor(n){super();this.expectedFee=n}},gn=e=>"TxDuplicate"in e?new Ze(e.TxDuplicate.duplicate_of):"InsufficientFunds"in e?new Qe(e.InsufficientFunds.balance.e8s):"TxCreatedInFuture"in e?new Ye:"TxTooOld"in e?new Xe(Number(e.TxTooOld.allowed_window_nanos)):"BadFee"in e?new it(e.BadFee.expected_fee.e8s):new te(`Unknown error type ${JSON.stringify(e)}`),yn=e=>{let{message:t}=e;if(t.includes("Reject code: 5")){if(t.match(/Sending from (.*) is not allowed/))return new at;{let n=t.match(/transaction.*duplicate.* in block (\d+)/);if(n&&n.length>1)return new Ze(BigInt(n[1]))}{let n=t.match(/debit account.*, current balance: (\d*(\.\d*)?)/);if(n&&n.length>1){let o=(0,Kn.convertStringToE8s)(n[1]);if(typeof o=="bigint")return new Qe(o)}}if(t.includes("is in future"))return new Ye;{let n=t.match(/older than (\d+)/);if(n&&n.length>1)return new Xe(Number.parseInt(n[1]))}}throw e};var Yn=require("@dfinity/utils");var jn=({IDL:e})=>{let t=e.Record({id:e.Nat64}),n=e.Variant({Ok:e.Vec(t),Err:e.Text}),o=e.Variant({Ok:e.Null,Err:e.Text}),r=e.Record({error:e.Opt(e.Text),timestamp_seconds:e.Nat64,neuron_id:e.Opt(t)}),s=e.Record({authenticated_principal_id:e.Opt(e.Principal),successfully_transferred_neurons:e.Vec(r),is_whitelisted_for_forwarding:e.Bool,has_donated:e.Bool,failed_transferred_neurons:e.Vec(r),neuron_ids:e.Vec(t),has_claimed:e.Bool,has_forwarded:e.Bool,icpts:e.Nat32}),a=e.Variant({Ok:s,Err:e.Text});return e.Service({balance:e.Func([e.Text],[e.Nat32],[]),claim_neurons:e.Func([e.Text],[n],[]),donate_account:e.Func([e.Text],[o],[]),forward_whitelisted_unclaimed_accounts:e.Func([e.Null],[o],[]),get_account:e.Func([e.Text],[a],[]),get_build_metadata:e.Func([],[e.Text],[]),len:e.Func([],[e.Nat16],[]),total:e.Func([],[e.Nat32],[])})};var zn=({IDL:e})=>{let t=e.Record({id:e.Nat64}),n=e.Variant({Ok:e.Vec(t),Err:e.Text}),o=e.Variant({Ok:e.Null,Err:e.Text}),r=e.Record({error:e.Opt(e.Text),timestamp_seconds:e.Nat64,neuron_id:e.Opt(t)}),s=e.Record({authenticated_principal_id:e.Opt(e.Principal),successfully_transferred_neurons:e.Vec(r),is_whitelisted_for_forwarding:e.Bool,has_donated:e.Bool,failed_transferred_neurons:e.Vec(r),neuron_ids:e.Vec(t),has_claimed:e.Bool,has_forwarded:e.Bool,icpts:e.Nat32}),a=e.Variant({Ok:s,Err:e.Text});return e.Service({balance:e.Func([e.Text],[e.Nat32],["query"]),claim_neurons:e.Func([e.Text],[n],[]),donate_account:e.Func([e.Text],[o],[]),forward_whitelisted_unclaimed_accounts:e.Func([e.Null],[o],[]),get_account:e.Func([e.Text],[a],["query"]),get_build_metadata:e.Func([],[e.Text],["query"]),len:e.Func([],[e.Nat16],["query"]),total:e.Func([],[e.Nat32],["query"])})};var Ae=require("@dfinity/principal"),Ks=Ae.Principal.fromText("rrkah-fqaaa-aaaaa-aaaaq-cai"),$n=Ae.Principal.fromText("rrkah-fqaaa-aaaaa-aaaaq-cai"),Jn=Ae.Principal.fromText("ryjl3-tyaaa-aaaaa-aaaba-cai"),Qn=Ae.Principal.fromText("renrk-eyaaa-aaaaa-aaada-cai"),Xn=Ae.Principal.fromText("r7inp-6aaaa-aaaaa-aaabq-cai");var Ve=class{constructor(t){this.service=t;this.claimNeurons=async({hexPubKey:t})=>{let n=await this.service.claim_neurons(t);if("Ok"in n)return n.Ok.map(o=>o.id);throw new Error(n.Err)}}static create(t={}){let{service:n}=(0,Yn.createServices)({options:{...t,canisterId:t.canisterId??Qn},idlFactory:zn,certifiedIdlFactory:jn});return new Ve(n)}};var m=require("@dfinity/utils");var Lo=Mn(In());var Dn=({IDL:e})=>{let t=e.Rec(),n=e.Record({id:e.Nat64}),o=e.Record({followees:e.Vec(n)}),r=e.Record({hash:e.Vec(e.Nat8)}),s=e.Record({id:e.Opt(e.Principal),reward_account:e.Opt(r)}),a=e.Record({dissolve_delay_seconds:e.Nat64}),d=e.Record({to_account:e.Opt(r)}),p=e.Variant({RewardToNeuron:a,RewardToAccount:d}),N=e.Record({node_provider:e.Opt(s),reward_mode:e.Opt(p),amount_e8s:e.Nat64}),l=e.Record({timestamp:e.Nat64,rewards:e.Vec(N)}),_=e.Record({not_dissolving_neurons_e8s_buckets:e.Vec(e.Tuple(e.Nat64,e.Float64)),garbage_collectable_neurons_count:e.Nat64,neurons_with_invalid_stake_count:e.Nat64,not_dissolving_neurons_count_buckets:e.Vec(e.Tuple(e.Nat64,e.Nat64)),total_supply_icp:e.Nat64,neurons_with_less_than_6_months_dissolve_delay_count:e.Nat64,dissolved_neurons_count:e.Nat64,community_fund_total_maturity_e8s_equivalent:e.Nat64,total_staked_e8s:e.Nat64,not_dissolving_neurons_count:e.Nat64,total_locked_e8s:e.Nat64,dissolved_neurons_e8s:e.Nat64,neurons_with_less_than_6_months_dissolve_delay_e8s:e.Nat64,dissolving_neurons_count_buckets:e.Vec(e.Tuple(e.Nat64,e.Nat64)),dissolving_neurons_count:e.Nat64,dissolving_neurons_e8s_buckets:e.Vec(e.Tuple(e.Nat64,e.Float64)),community_fund_total_staked_e8s:e.Nat64,timestamp_seconds:e.Nat64}),w=e.Record({neuron_minimum_stake_e8s:e.Nat64,max_proposals_to_keep_per_topic:e.Nat32,neuron_management_fee_per_proposal_e8s:e.Nat64,reject_cost_e8s:e.Nat64,transaction_fee_e8s:e.Nat64,neuron_spawn_dissolve_delay_seconds:e.Nat64,minimum_icp_xdr_rate:e.Nat64,maximum_node_provider_rewards_e8s:e.Nat64}),f=e.Record({rounds_since_last_distribution:e.Opt(e.Nat64),day_after_genesis:e.Nat64,actual_timestamp_seconds:e.Nat64,total_available_e8s_equivalent:e.Nat64,latest_round_available_e8s_equivalent:e.Opt(e.Nat64),distributed_e8s_equivalent:e.Nat64,settled_proposals:e.Vec(n)}),g=e.Record({to_subaccount:e.Vec(e.Nat8),neuron_stake_e8s:e.Nat64,from:e.Opt(e.Principal),memo:e.Nat64,from_subaccount:e.Vec(e.Nat8),transfer_timestamp:e.Nat64,block_height:e.Nat64}),c=e.Record({error_message:e.Text,error_type:e.Int32}),W=e.Record({nns_neuron_id:e.Nat64,amount_icp_e8s:e.Nat64}),B=e.Record({hotkey_principal:e.Text,cf_neurons:e.Vec(W)}),A=e.Record({vote:e.Int32,voting_power:e.Nat64}),E=e.Record({status:e.Opt(e.Int32),freezing_threshold:e.Opt(e.Nat64),controllers:e.Vec(e.Principal),memory_size:e.Opt(e.Nat64),cycles:e.Opt(e.Nat64),idle_cycles_burned_per_day:e.Opt(e.Nat64),module_hash:e.Vec(e.Nat8)}),v=e.Record({status:e.Opt(E),canister_id:e.Opt(e.Principal)}),G=e.Record({ledger_index_canister_summary:e.Opt(v),fallback_controller_principal_ids:e.Vec(e.Principal),ledger_archive_canister_summaries:e.Vec(v),ledger_canister_summary:e.Opt(v),swap_canister_summary:e.Opt(v),governance_canister_summary:e.Opt(v),root_canister_summary:e.Opt(v),dapp_canister_summaries:e.Vec(v)}),h=e.Record({swap_background_information:e.Opt(G)}),k=e.Record({no:e.Nat64,yes:e.Nat64,total:e.Nat64,timestamp_seconds:e.Nat64}),x=e.Record({name:e.Text,description:e.Opt(e.Text)}),T=e.Record({id:e.Opt(n),known_neuron_data:e.Opt(x)}),V=e.Record({percentage_to_spawn:e.Opt(e.Nat32),new_controller:e.Opt(e.Principal),nonce:e.Opt(e.Nat64)}),R=e.Record({amount_e8s:e.Nat64}),U=e.Record({topic:e.Int32,followees:e.Vec(n)}),M=e.Record({controller:e.Opt(e.Principal),memo:e.Nat64}),K=e.Variant({NeuronIdOrSubaccount:e.Record({}),MemoAndController:M,Memo:e.Nat64}),C=e.Record({by:e.Opt(K)}),j=e.Record({hot_key_to_remove:e.Opt(e.Principal)}),z=e.Record({new_hot_key:e.Opt(e.Principal)}),$=e.Record({requested_setting_for_auto_stake_maturity:e.Bool}),J=e.Record({additional_dissolve_delay_seconds:e.Nat32}),Q=e.Record({dissolve_timestamp_seconds:e.Nat64}),X=e.Variant({RemoveHotKey:j,AddHotKey:z,ChangeAutoStakeMaturity:$,StopDissolving:e.Record({}),StartDissolving:e.Record({}),IncreaseDissolveDelay:J,JoinCommunityFund:e.Record({}),LeaveCommunityFund:e.Record({}),SetDissolveTimestamp:Q}),F=e.Record({operation:e.Opt(X)}),Y=e.Record({vote:e.Int32,proposal:e.Opt(n)}),i=e.Record({source_neuron_id:e.Opt(n)}),ae=e.Record({dissolve_delay_seconds:e.Nat64,kyc_verified:e.Bool,amount_e8s:e.Nat64,new_controller:e.Opt(e.Principal),nonce:e.Nat64}),ye=e.Record({percentage_to_stake:e.Opt(e.Nat32)}),ie=e.Record({percentage_to_merge:e.Nat32}),ve=e.Record({e8s:e.Nat64}),ce=e.Record({to_account:e.Opt(r),amount:e.Opt(ve)}),Oe=e.Variant({Spawn:V,Split:R,Follow:U,ClaimOrRefresh:C,Configure:F,RegisterVote:Y,Merge:i,DisburseToNeuron:ae,MakeProposal:t,StakeMaturity:ye,MergeMaturity:ie,Disburse:ce}),be=e.Variant({Subaccount:e.Vec(e.Nat8),NeuronId:n}),he=e.Record({id:e.Opt(n),command:e.Opt(Oe),neuron_id_or_subaccount:e.Opt(be)}),de=e.Record({basis_points:e.Opt(e.Nat64)}),O=e.Record({seconds:e.Opt(e.Nat64)}),b=e.Record({e8s:e.Opt(e.Nat64)}),mt=e.Record({reward_rate_transition_duration:e.Opt(O),initial_reward_rate:e.Opt(de),final_reward_rate:e.Opt(de)}),ft=e.Record({neuron_maximum_dissolve_delay_bonus:e.Opt(de),neuron_maximum_age_for_age_bonus:e.Opt(O),neuron_maximum_dissolve_delay:e.Opt(O),neuron_minimum_dissolve_delay_to_vote:e.Opt(O),neuron_maximum_age_bonus:e.Opt(de),neuron_minimum_stake:e.Opt(b),proposal_wait_for_quiet_deadline_increase:e.Opt(O),proposal_initial_voting_period:e.Opt(O),proposal_rejection_fee:e.Opt(b),voting_reward_parameters:e.Opt(mt)}),Be=e.Record({base64_encoding:e.Opt(e.Text)}),Nt=e.Record({transaction_fee:e.Opt(b),token_symbol:e.Opt(e.Text),token_logo:e.Opt(Be),token_name:e.Opt(e.Text)}),wt=e.Record({id:e.Opt(e.Principal)}),Rt=e.Record({dissolve_delay_interval:e.Opt(O),count:e.Opt(e.Nat64)}),gt=e.Record({seconds_after_utc_midnight:e.Opt(e.Nat64)}),yt=e.Record({iso_codes:e.Vec(e.Text)}),vt=e.Record({minimum_participants:e.Opt(e.Nat64),duration:e.Opt(O),neuron_basket_construction_parameters:e.Opt(Rt),confirmation_text:e.Opt(e.Text),maximum_participant_icp:e.Opt(b),minimum_icp:e.Opt(b),minimum_participant_icp:e.Opt(b),start_time:e.Opt(gt),maximum_icp:e.Opt(b),neurons_fund_investment_icp:e.Opt(b),restricted_countries:e.Opt(yt)}),Ee=e.Record({total:e.Opt(b)}),Ot=e.Record({controller:e.Opt(e.Principal),dissolve_delay:e.Opt(O),memo:e.Opt(e.Nat64),vesting_period:e.Opt(O),stake:e.Opt(b)}),bt=e.Record({developer_neurons:e.Vec(Ot)}),ht=e.Record({treasury_distribution:e.Opt(Ee),developer_distribution:e.Opt(bt),swap_distribution:e.Opt(Ee)}),St=e.Record({url:e.Opt(e.Text),governance_parameters:e.Opt(ft),fallback_controller_principal_ids:e.Vec(e.Principal),logo:e.Opt(Be),name:e.Opt(e.Text),ledger_parameters:e.Opt(Nt),description:e.Opt(e.Text),dapp_canisters:e.Vec(wt),swap_parameters:e.Opt(vt),initial_token_distribution:e.Opt(ht)}),xt=e.Record({nns_function:e.Int32,payload:e.Vec(e.Nat8)}),Tt=e.Record({dissolve_delay_interval_seconds:e.Nat64,count:e.Nat64}),Pt=e.Record({min_participant_icp_e8s:e.Nat64,neuron_basket_construction_parameters:e.Opt(Tt),max_icp_e8s:e.Nat64,swap_due_timestamp_seconds:e.Nat64,min_participants:e.Nat32,sns_token_e8s:e.Nat64,sale_delay_seconds:e.Opt(e.Nat64),max_participant_icp_e8s:e.Nat64,min_icp_e8s:e.Nat64}),kt=e.Record({community_fund_investment_e8s:e.Opt(e.Nat64),target_swap_canister_id:e.Opt(e.Principal),params:e.Opt(Pt)}),Ct=e.Record({start_timestamp_seconds:e.Nat64,end_timestamp_seconds:e.Nat64}),At=e.Record({open_time_window:e.Opt(Ct)}),Vt=e.Record({request:e.Opt(At),swap_canister_id:e.Opt(e.Principal)}),Mt=e.Record({default_followees:e.Vec(e.Tuple(e.Int32,o))}),Ue=e.Record({use_registry_derived_rewards:e.Opt(e.Bool),rewards:e.Vec(N)}),Ft=e.Record({principals:e.Vec(e.Principal)}),qt=e.Variant({ToRemove:s,ToAdd:s}),Bt=e.Record({change:e.Opt(qt)}),Et=e.Record({motion_text:e.Text}),Ut=e.Variant({RegisterKnownNeuron:T,ManageNeuron:he,CreateServiceNervousSystem:St,ExecuteNnsFunction:xt,RewardNodeProvider:N,OpenSnsTokenSwap:kt,SetSnsTokenSwapOpenTimeWindow:Vt,SetDefaultFollowees:Mt,RewardNodeProviders:Ue,ManageNetworkEconomics:w,ApproveGenesisKyc:Ft,AddOrRemoveNodeProvider:Bt,Motion:Et});t.fill(e.Record({url:e.Text,title:e.Opt(e.Text),action:e.Opt(Ut),summary:e.Text}));let Ht=e.Record({current_deadline_timestamp_seconds:e.Nat64}),Wt=e.Record({id:e.Opt(n),failure_reason:e.Opt(c),cf_participants:e.Vec(B),ballots:e.Vec(e.Tuple(e.Nat64,A)),proposal_timestamp_seconds:e.Nat64,reward_event_round:e.Nat64,failed_timestamp_seconds:e.Nat64,reject_cost_e8s:e.Nat64,derived_proposal_information:e.Opt(h),latest_tally:e.Opt(k),sns_token_swap_lifecycle:e.Opt(e.Int32),decided_timestamp_seconds:e.Nat64,proposal:e.Opt(t),proposer:e.Opt(n),wait_for_quiet_state:e.Opt(Ht),executed_timestamp_seconds:e.Nat64,original_total_community_fund_maturity_e8s_equivalent:e.Opt(e.Nat64)}),Gt=e.Variant({Spawn:n,Split:R,Configure:F,Merge:i,DisburseToNeuron:ae,SyncCommand:e.Record({}),ClaimOrRefreshNeuron:C,MergeMaturity:ie,Disburse:ce}),Kt=e.Record({command:e.Opt(Gt),timestamp:e.Nat64}),He=e.Record({vote:e.Int32,proposal_id:e.Opt(n)}),jt=e.Variant({DissolveDelaySeconds:e.Nat64,WhenDissolvedTimestampSeconds:e.Nat64}),Z=e.Record({id:e.Opt(n),staked_maturity_e8s_equivalent:e.Opt(e.Nat64),controller:e.Opt(e.Principal),recent_ballots:e.Vec(He),kyc_verified:e.Bool,not_for_profit:e.Bool,maturity_e8s_equivalent:e.Nat64,cached_neuron_stake_e8s:e.Nat64,created_timestamp_seconds:e.Nat64,auto_stake_maturity:e.Opt(e.Bool),aging_since_timestamp_seconds:e.Nat64,hot_keys:e.Vec(e.Principal),account:e.Vec(e.Nat8),joined_community_fund_timestamp_seconds:e.Opt(e.Nat64),dissolve_state:e.Opt(jt),followees:e.Vec(e.Tuple(e.Int32,o)),neuron_fees_e8s:e.Nat64,transfer:e.Opt(g),known_neuron_data:e.Opt(x),spawn_at_timestamp_seconds:e.Opt(e.Nat64)}),_r=e.Record({default_followees:e.Vec(e.Tuple(e.Int32,o)),most_recent_monthly_node_provider_rewards:e.Opt(l),maturity_modulation_last_updated_at_timestamp_seconds:e.Opt(e.Nat64),wait_for_quiet_threshold_seconds:e.Nat64,metrics:e.Opt(_),node_providers:e.Vec(s),cached_daily_maturity_modulation_basis_points:e.Opt(e.Int32),economics:e.Opt(w),spawning_neurons:e.Opt(e.Bool),latest_reward_event:e.Opt(f),to_claim_transfers:e.Vec(g),short_voting_period_seconds:e.Nat64,proposals:e.Vec(e.Tuple(e.Nat64,Wt)),in_flight_commands:e.Vec(e.Tuple(e.Nat64,Kt)),neurons:e.Vec(e.Tuple(e.Nat64,Z)),genesis_timestamp_seconds:e.Nat64}),ue=e.Variant({Ok:e.Null,Err:c}),zt=e.Variant({Error:c,NeuronId:n}),$t=e.Record({result:e.Opt(zt)}),We=e.Variant({Ok:Z,Err:c}),Jt=e.Variant({Ok:_,Err:c}),Qt=e.Variant({Ok:Ue,Err:c}),pe=e.Record({dissolve_delay_seconds:e.Nat64,recent_ballots:e.Vec(He),created_timestamp_seconds:e.Nat64,state:e.Int32,stake_e8s:e.Nat64,joined_community_fund_timestamp_seconds:e.Opt(e.Nat64),retrieved_at_timestamp_seconds:e.Nat64,known_neuron_data:e.Opt(x),voting_power:e.Nat64,age_seconds:e.Nat64}),Ge=e.Variant({Ok:pe,Err:c}),Xt=e.Variant({Ok:s,Err:c}),Se=e.Record({id:e.Opt(n),status:e.Int32,topic:e.Int32,failure_reason:e.Opt(c),ballots:e.Vec(e.Tuple(e.Nat64,A)),proposal_timestamp_seconds:e.Nat64,reward_event_round:e.Nat64,deadline_timestamp_seconds:e.Opt(e.Nat64),failed_timestamp_seconds:e.Nat64,reject_cost_e8s:e.Nat64,derived_proposal_information:e.Opt(h),latest_tally:e.Opt(k),reward_status:e.Int32,decided_timestamp_seconds:e.Nat64,proposal:e.Opt(t),proposer:e.Opt(n),executed_timestamp_seconds:e.Nat64}),Yt=e.Record({known_neurons:e.Vec(T)}),Zt=e.Record({neuron_ids:e.Vec(e.Nat64),include_neurons_readable_by_caller:e.Bool}),It=e.Record({neuron_infos:e.Vec(e.Tuple(e.Nat64,pe)),full_neurons:e.Vec(Z)}),Dt=e.Record({node_providers:e.Vec(s)}),Lt=e.Record({include_reward_status:e.Vec(e.Int32),before_proposal:e.Opt(n),limit:e.Nat32,exclude_topic:e.Vec(e.Int32),include_all_manage_neuron_proposals:e.Opt(e.Bool),include_status:e.Vec(e.Int32)}),en=e.Record({proposal_info:e.Vec(Se)}),xe=e.Record({created_neuron_id:e.Opt(n)}),tn=e.Record({refreshed_neuron_id:e.Opt(n)}),nn=e.Record({target_neuron:e.Opt(Z),source_neuron:e.Opt(Z),target_neuron_info:e.Opt(pe),source_neuron_info:e.Opt(pe)}),on=e.Record({proposal_id:e.Opt(n)}),rn=e.Record({maturity_e8s:e.Nat64,staked_maturity_e8s:e.Nat64}),sn=e.Record({merged_maturity_e8s:e.Nat64,new_stake_e8s:e.Nat64}),an=e.Record({transfer_block_height:e.Nat64}),cn=e.Variant({Error:c,Spawn:xe,Split:xe,Follow:e.Record({}),ClaimOrRefresh:tn,Configure:e.Record({}),RegisterVote:e.Record({}),Merge:nn,DisburseToNeuron:xe,MakeProposal:on,StakeMaturity:rn,MergeMaturity:sn,Disburse:an}),Ke=e.Record({command:e.Opt(cn)}),dn=e.Record({sns_governance_canister_id:e.Opt(e.Principal)}),un=e.Variant({Committed:dn,Aborted:e.Record({})}),pn=e.Record({result:e.Opt(un),open_sns_token_swap_proposal_id:e.Opt(e.Nat64)}),_n=e.Record({reward_account:e.Opt(r)});return e.Service({claim_gtc_neurons:e.Func([e.Principal,e.Vec(n)],[ue],[]),claim_or_refresh_neuron_from_account:e.Func([M],[$t],[]),get_build_metadata:e.Func([],[e.Text],[]),get_full_neuron:e.Func([e.Nat64],[We],[]),get_full_neuron_by_id_or_subaccount:e.Func([be],[We],[]),get_latest_reward_event:e.Func([],[f],[]),get_metrics:e.Func([],[Jt],[]),get_monthly_node_provider_rewards:e.Func([],[Qt],[]),get_most_recent_monthly_node_provider_rewards:e.Func([],[e.Opt(l)],[]),get_network_economics_parameters:e.Func([],[w],[]),get_neuron_ids:e.Func([],[e.Vec(e.Nat64)],[]),get_neuron_info:e.Func([e.Nat64],[Ge],[]),get_neuron_info_by_id_or_subaccount:e.Func([be],[Ge],[]),get_node_provider_by_caller:e.Func([e.Null],[Xt],[]),get_pending_proposals:e.Func([],[e.Vec(Se)],[]),get_proposal_info:e.Func([e.Nat64],[e.Opt(Se)],[]),list_known_neurons:e.Func([],[Yt],[]),list_neurons:e.Func([Zt],[It],[]),list_node_providers:e.Func([],[Dt],[]),list_proposals:e.Func([Lt],[en],[]),manage_neuron:e.Func([he],[Ke],[]),settle_community_fund_participation:e.Func([pn],[ue],[]),simulate_manage_neuron:e.Func([he],[Ke],[]),transfer_gtc_neuron:e.Func([n,n],[ue],[]),update_node_provider:e.Func([_n],[ue],[])})};var Ln=({IDL:e})=>{let t=e.Rec(),n=e.Record({id:e.Nat64}),o=e.Record({followees:e.Vec(n)}),r=e.Record({hash:e.Vec(e.Nat8)}),s=e.Record({id:e.Opt(e.Principal),reward_account:e.Opt(r)}),a=e.Record({dissolve_delay_seconds:e.Nat64}),d=e.Record({to_account:e.Opt(r)}),p=e.Variant({RewardToNeuron:a,RewardToAccount:d}),N=e.Record({node_provider:e.Opt(s),reward_mode:e.Opt(p),amount_e8s:e.Nat64}),l=e.Record({timestamp:e.Nat64,rewards:e.Vec(N)}),_=e.Record({not_dissolving_neurons_e8s_buckets:e.Vec(e.Tuple(e.Nat64,e.Float64)),garbage_collectable_neurons_count:e.Nat64,neurons_with_invalid_stake_count:e.Nat64,not_dissolving_neurons_count_buckets:e.Vec(e.Tuple(e.Nat64,e.Nat64)),total_supply_icp:e.Nat64,neurons_with_less_than_6_months_dissolve_delay_count:e.Nat64,dissolved_neurons_count:e.Nat64,community_fund_total_maturity_e8s_equivalent:e.Nat64,total_staked_e8s:e.Nat64,not_dissolving_neurons_count:e.Nat64,total_locked_e8s:e.Nat64,dissolved_neurons_e8s:e.Nat64,neurons_with_less_than_6_months_dissolve_delay_e8s:e.Nat64,dissolving_neurons_count_buckets:e.Vec(e.Tuple(e.Nat64,e.Nat64)),dissolving_neurons_count:e.Nat64,dissolving_neurons_e8s_buckets:e.Vec(e.Tuple(e.Nat64,e.Float64)),community_fund_total_staked_e8s:e.Nat64,timestamp_seconds:e.Nat64}),w=e.Record({neuron_minimum_stake_e8s:e.Nat64,max_proposals_to_keep_per_topic:e.Nat32,neuron_management_fee_per_proposal_e8s:e.Nat64,reject_cost_e8s:e.Nat64,transaction_fee_e8s:e.Nat64,neuron_spawn_dissolve_delay_seconds:e.Nat64,minimum_icp_xdr_rate:e.Nat64,maximum_node_provider_rewards_e8s:e.Nat64}),f=e.Record({rounds_since_last_distribution:e.Opt(e.Nat64),day_after_genesis:e.Nat64,actual_timestamp_seconds:e.Nat64,total_available_e8s_equivalent:e.Nat64,latest_round_available_e8s_equivalent:e.Opt(e.Nat64),distributed_e8s_equivalent:e.Nat64,settled_proposals:e.Vec(n)}),g=e.Record({to_subaccount:e.Vec(e.Nat8),neuron_stake_e8s:e.Nat64,from:e.Opt(e.Principal),memo:e.Nat64,from_subaccount:e.Vec(e.Nat8),transfer_timestamp:e.Nat64,block_height:e.Nat64}),c=e.Record({error_message:e.Text,error_type:e.Int32}),W=e.Record({nns_neuron_id:e.Nat64,amount_icp_e8s:e.Nat64}),B=e.Record({hotkey_principal:e.Text,cf_neurons:e.Vec(W)}),A=e.Record({vote:e.Int32,voting_power:e.Nat64}),E=e.Record({status:e.Opt(e.Int32),freezing_threshold:e.Opt(e.Nat64),controllers:e.Vec(e.Principal),memory_size:e.Opt(e.Nat64),cycles:e.Opt(e.Nat64),idle_cycles_burned_per_day:e.Opt(e.Nat64),module_hash:e.Vec(e.Nat8)}),v=e.Record({status:e.Opt(E),canister_id:e.Opt(e.Principal)}),G=e.Record({ledger_index_canister_summary:e.Opt(v),fallback_controller_principal_ids:e.Vec(e.Principal),ledger_archive_canister_summaries:e.Vec(v),ledger_canister_summary:e.Opt(v),swap_canister_summary:e.Opt(v),governance_canister_summary:e.Opt(v),root_canister_summary:e.Opt(v),dapp_canister_summaries:e.Vec(v)}),h=e.Record({swap_background_information:e.Opt(G)}),k=e.Record({no:e.Nat64,yes:e.Nat64,total:e.Nat64,timestamp_seconds:e.Nat64}),x=e.Record({name:e.Text,description:e.Opt(e.Text)}),T=e.Record({id:e.Opt(n),known_neuron_data:e.Opt(x)}),V=e.Record({percentage_to_spawn:e.Opt(e.Nat32),new_controller:e.Opt(e.Principal),nonce:e.Opt(e.Nat64)}),R=e.Record({amount_e8s:e.Nat64}),U=e.Record({topic:e.Int32,followees:e.Vec(n)}),M=e.Record({controller:e.Opt(e.Principal),memo:e.Nat64}),K=e.Variant({NeuronIdOrSubaccount:e.Record({}),MemoAndController:M,Memo:e.Nat64}),C=e.Record({by:e.Opt(K)}),j=e.Record({hot_key_to_remove:e.Opt(e.Principal)}),z=e.Record({new_hot_key:e.Opt(e.Principal)}),$=e.Record({requested_setting_for_auto_stake_maturity:e.Bool}),J=e.Record({additional_dissolve_delay_seconds:e.Nat32}),Q=e.Record({dissolve_timestamp_seconds:e.Nat64}),X=e.Variant({RemoveHotKey:j,AddHotKey:z,ChangeAutoStakeMaturity:$,StopDissolving:e.Record({}),StartDissolving:e.Record({}),IncreaseDissolveDelay:J,JoinCommunityFund:e.Record({}),LeaveCommunityFund:e.Record({}),SetDissolveTimestamp:Q}),F=e.Record({operation:e.Opt(X)}),Y=e.Record({vote:e.Int32,proposal:e.Opt(n)}),i=e.Record({source_neuron_id:e.Opt(n)}),ae=e.Record({dissolve_delay_seconds:e.Nat64,kyc_verified:e.Bool,amount_e8s:e.Nat64,new_controller:e.Opt(e.Principal),nonce:e.Nat64}),ye=e.Record({percentage_to_stake:e.Opt(e.Nat32)}),ie=e.Record({percentage_to_merge:e.Nat32}),ve=e.Record({e8s:e.Nat64}),ce=e.Record({to_account:e.Opt(r),amount:e.Opt(ve)}),Oe=e.Variant({Spawn:V,Split:R,Follow:U,ClaimOrRefresh:C,Configure:F,RegisterVote:Y,Merge:i,DisburseToNeuron:ae,MakeProposal:t,StakeMaturity:ye,MergeMaturity:ie,Disburse:ce}),be=e.Variant({Subaccount:e.Vec(e.Nat8),NeuronId:n}),he=e.Record({id:e.Opt(n),command:e.Opt(Oe),neuron_id_or_subaccount:e.Opt(be)}),de=e.Record({basis_points:e.Opt(e.Nat64)}),O=e.Record({seconds:e.Opt(e.Nat64)}),b=e.Record({e8s:e.Opt(e.Nat64)}),mt=e.Record({reward_rate_transition_duration:e.Opt(O),initial_reward_rate:e.Opt(de),final_reward_rate:e.Opt(de)}),ft=e.Record({neuron_maximum_dissolve_delay_bonus:e.Opt(de),neuron_maximum_age_for_age_bonus:e.Opt(O),neuron_maximum_dissolve_delay:e.Opt(O),neuron_minimum_dissolve_delay_to_vote:e.Opt(O),neuron_maximum_age_bonus:e.Opt(de),neuron_minimum_stake:e.Opt(b),proposal_wait_for_quiet_deadline_increase:e.Opt(O),proposal_initial_voting_period:e.Opt(O),proposal_rejection_fee:e.Opt(b),voting_reward_parameters:e.Opt(mt)}),Be=e.Record({base64_encoding:e.Opt(e.Text)}),Nt=e.Record({transaction_fee:e.Opt(b),token_symbol:e.Opt(e.Text),token_logo:e.Opt(Be),token_name:e.Opt(e.Text)}),wt=e.Record({id:e.Opt(e.Principal)}),Rt=e.Record({dissolve_delay_interval:e.Opt(O),count:e.Opt(e.Nat64)}),gt=e.Record({seconds_after_utc_midnight:e.Opt(e.Nat64)}),yt=e.Record({iso_codes:e.Vec(e.Text)}),vt=e.Record({minimum_participants:e.Opt(e.Nat64),duration:e.Opt(O),neuron_basket_construction_parameters:e.Opt(Rt),confirmation_text:e.Opt(e.Text),maximum_participant_icp:e.Opt(b),minimum_icp:e.Opt(b),minimum_participant_icp:e.Opt(b),start_time:e.Opt(gt),maximum_icp:e.Opt(b),neurons_fund_investment_icp:e.Opt(b),restricted_countries:e.Opt(yt)}),Ee=e.Record({total:e.Opt(b)}),Ot=e.Record({controller:e.Opt(e.Principal),dissolve_delay:e.Opt(O),memo:e.Opt(e.Nat64),vesting_period:e.Opt(O),stake:e.Opt(b)}),bt=e.Record({developer_neurons:e.Vec(Ot)}),ht=e.Record({treasury_distribution:e.Opt(Ee),developer_distribution:e.Opt(bt),swap_distribution:e.Opt(Ee)}),St=e.Record({url:e.Opt(e.Text),governance_parameters:e.Opt(ft),fallback_controller_principal_ids:e.Vec(e.Principal),logo:e.Opt(Be),name:e.Opt(e.Text),ledger_parameters:e.Opt(Nt),description:e.Opt(e.Text),dapp_canisters:e.Vec(wt),swap_parameters:e.Opt(vt),initial_token_distribution:e.Opt(ht)}),xt=e.Record({nns_function:e.Int32,payload:e.Vec(e.Nat8)}),Tt=e.Record({dissolve_delay_interval_seconds:e.Nat64,count:e.Nat64}),Pt=e.Record({min_participant_icp_e8s:e.Nat64,neuron_basket_construction_parameters:e.Opt(Tt),max_icp_e8s:e.Nat64,swap_due_timestamp_seconds:e.Nat64,min_participants:e.Nat32,sns_token_e8s:e.Nat64,sale_delay_seconds:e.Opt(e.Nat64),max_participant_icp_e8s:e.Nat64,min_icp_e8s:e.Nat64}),kt=e.Record({community_fund_investment_e8s:e.Opt(e.Nat64),target_swap_canister_id:e.Opt(e.Principal),params:e.Opt(Pt)}),Ct=e.Record({start_timestamp_seconds:e.Nat64,end_timestamp_seconds:e.Nat64}),At=e.Record({open_time_window:e.Opt(Ct)}),Vt=e.Record({request:e.Opt(At),swap_canister_id:e.Opt(e.Principal)}),Mt=e.Record({default_followees:e.Vec(e.Tuple(e.Int32,o))}),Ue=e.Record({use_registry_derived_rewards:e.Opt(e.Bool),rewards:e.Vec(N)}),Ft=e.Record({principals:e.Vec(e.Principal)}),qt=e.Variant({ToRemove:s,ToAdd:s}),Bt=e.Record({change:e.Opt(qt)}),Et=e.Record({motion_text:e.Text}),Ut=e.Variant({RegisterKnownNeuron:T,ManageNeuron:he,CreateServiceNervousSystem:St,ExecuteNnsFunction:xt,RewardNodeProvider:N,OpenSnsTokenSwap:kt,SetSnsTokenSwapOpenTimeWindow:Vt,SetDefaultFollowees:Mt,RewardNodeProviders:Ue,ManageNetworkEconomics:w,ApproveGenesisKyc:Ft,AddOrRemoveNodeProvider:Bt,Motion:Et});t.fill(e.Record({url:e.Text,title:e.Opt(e.Text),action:e.Opt(Ut),summary:e.Text}));let Ht=e.Record({current_deadline_timestamp_seconds:e.Nat64}),Wt=e.Record({id:e.Opt(n),failure_reason:e.Opt(c),cf_participants:e.Vec(B),ballots:e.Vec(e.Tuple(e.Nat64,A)),proposal_timestamp_seconds:e.Nat64,reward_event_round:e.Nat64,failed_timestamp_seconds:e.Nat64,reject_cost_e8s:e.Nat64,derived_proposal_information:e.Opt(h),latest_tally:e.Opt(k),sns_token_swap_lifecycle:e.Opt(e.Int32),decided_timestamp_seconds:e.Nat64,proposal:e.Opt(t),proposer:e.Opt(n),wait_for_quiet_state:e.Opt(Ht),executed_timestamp_seconds:e.Nat64,original_total_community_fund_maturity_e8s_equivalent:e.Opt(e.Nat64)}),Gt=e.Variant({Spawn:n,Split:R,Configure:F,Merge:i,DisburseToNeuron:ae,SyncCommand:e.Record({}),ClaimOrRefreshNeuron:C,MergeMaturity:ie,Disburse:ce}),Kt=e.Record({command:e.Opt(Gt),timestamp:e.Nat64}),He=e.Record({vote:e.Int32,proposal_id:e.Opt(n)}),jt=e.Variant({DissolveDelaySeconds:e.Nat64,WhenDissolvedTimestampSeconds:e.Nat64}),Z=e.Record({id:e.Opt(n),staked_maturity_e8s_equivalent:e.Opt(e.Nat64),controller:e.Opt(e.Principal),recent_ballots:e.Vec(He),kyc_verified:e.Bool,not_for_profit:e.Bool,maturity_e8s_equivalent:e.Nat64,cached_neuron_stake_e8s:e.Nat64,created_timestamp_seconds:e.Nat64,auto_stake_maturity:e.Opt(e.Bool),aging_since_timestamp_seconds:e.Nat64,hot_keys:e.Vec(e.Principal),account:e.Vec(e.Nat8),joined_community_fund_timestamp_seconds:e.Opt(e.Nat64),dissolve_state:e.Opt(jt),followees:e.Vec(e.Tuple(e.Int32,o)),neuron_fees_e8s:e.Nat64,transfer:e.Opt(g),known_neuron_data:e.Opt(x),spawn_at_timestamp_seconds:e.Opt(e.Nat64)}),_r=e.Record({default_followees:e.Vec(e.Tuple(e.Int32,o)),most_recent_monthly_node_provider_rewards:e.Opt(l),maturity_modulation_last_updated_at_timestamp_seconds:e.Opt(e.Nat64),wait_for_quiet_threshold_seconds:e.Nat64,metrics:e.Opt(_),node_providers:e.Vec(s),cached_daily_maturity_modulation_basis_points:e.Opt(e.Int32),economics:e.Opt(w),spawning_neurons:e.Opt(e.Bool),latest_reward_event:e.Opt(f),to_claim_transfers:e.Vec(g),short_voting_period_seconds:e.Nat64,proposals:e.Vec(e.Tuple(e.Nat64,Wt)),in_flight_commands:e.Vec(e.Tuple(e.Nat64,Kt)),neurons:e.Vec(e.Tuple(e.Nat64,Z)),genesis_timestamp_seconds:e.Nat64}),ue=e.Variant({Ok:e.Null,Err:c}),zt=e.Variant({Error:c,NeuronId:n}),$t=e.Record({result:e.Opt(zt)}),We=e.Variant({Ok:Z,Err:c}),Jt=e.Variant({Ok:_,Err:c}),Qt=e.Variant({Ok:Ue,Err:c}),pe=e.Record({dissolve_delay_seconds:e.Nat64,recent_ballots:e.Vec(He),created_timestamp_seconds:e.Nat64,state:e.Int32,stake_e8s:e.Nat64,joined_community_fund_timestamp_seconds:e.Opt(e.Nat64),retrieved_at_timestamp_seconds:e.Nat64,known_neuron_data:e.Opt(x),voting_power:e.Nat64,age_seconds:e.Nat64}),Ge=e.Variant({Ok:pe,Err:c}),Xt=e.Variant({Ok:s,Err:c}),Se=e.Record({id:e.Opt(n),status:e.Int32,topic:e.Int32,failure_reason:e.Opt(c),ballots:e.Vec(e.Tuple(e.Nat64,A)),proposal_timestamp_seconds:e.Nat64,reward_event_round:e.Nat64,deadline_timestamp_seconds:e.Opt(e.Nat64),failed_timestamp_seconds:e.Nat64,reject_cost_e8s:e.Nat64,derived_proposal_information:e.Opt(h),latest_tally:e.Opt(k),reward_status:e.Int32,decided_timestamp_seconds:e.Nat64,proposal:e.Opt(t),proposer:e.Opt(n),executed_timestamp_seconds:e.Nat64}),Yt=e.Record({known_neurons:e.Vec(T)}),Zt=e.Record({neuron_ids:e.Vec(e.Nat64),include_neurons_readable_by_caller:e.Bool}),It=e.Record({neuron_infos:e.Vec(e.Tuple(e.Nat64,pe)),full_neurons:e.Vec(Z)}),Dt=e.Record({node_providers:e.Vec(s)}),Lt=e.Record({include_reward_status:e.Vec(e.Int32),before_proposal:e.Opt(n),limit:e.Nat32,exclude_topic:e.Vec(e.Int32),include_all_manage_neuron_proposals:e.Opt(e.Bool),include_status:e.Vec(e.Int32)}),en=e.Record({proposal_info:e.Vec(Se)}),xe=e.Record({created_neuron_id:e.Opt(n)}),tn=e.Record({refreshed_neuron_id:e.Opt(n)}),nn=e.Record({target_neuron:e.Opt(Z),source_neuron:e.Opt(Z),target_neuron_info:e.Opt(pe),source_neuron_info:e.Opt(pe)}),on=e.Record({proposal_id:e.Opt(n)}),rn=e.Record({maturity_e8s:e.Nat64,staked_maturity_e8s:e.Nat64}),sn=e.Record({merged_maturity_e8s:e.Nat64,new_stake_e8s:e.Nat64}),an=e.Record({transfer_block_height:e.Nat64}),cn=e.Variant({Error:c,Spawn:xe,Split:xe,Follow:e.Record({}),ClaimOrRefresh:tn,Configure:e.Record({}),RegisterVote:e.Record({}),Merge:nn,DisburseToNeuron:xe,MakeProposal:on,StakeMaturity:rn,MergeMaturity:sn,Disburse:an}),Ke=e.Record({command:e.Opt(cn)}),dn=e.Record({sns_governance_canister_id:e.Opt(e.Principal)}),un=e.Variant({Committed:dn,Aborted:e.Record({})}),pn=e.Record({result:e.Opt(un),open_sns_token_swap_proposal_id:e.Opt(e.Nat64)}),_n=e.Record({reward_account:e.Opt(r)});return e.Service({claim_gtc_neurons:e.Func([e.Principal,e.Vec(n)],[ue],[]),claim_or_refresh_neuron_from_account:e.Func([M],[$t],[]),get_build_metadata:e.Func([],[e.Text],["query"]),get_full_neuron:e.Func([e.Nat64],[We],["query"]),get_full_neuron_by_id_or_subaccount:e.Func([be],[We],["query"]),get_latest_reward_event:e.Func([],[f],["query"]),get_metrics:e.Func([],[Jt],["query"]),get_monthly_node_provider_rewards:e.Func([],[Qt],[]),get_most_recent_monthly_node_provider_rewards:e.Func([],[e.Opt(l)],["query"]),get_network_economics_parameters:e.Func([],[w],["query"]),get_neuron_ids:e.Func([],[e.Vec(e.Nat64)],["query"]),get_neuron_info:e.Func([e.Nat64],[Ge],["query"]),get_neuron_info_by_id_or_subaccount:e.Func([be],[Ge],["query"]),get_node_provider_by_caller:e.Func([e.Null],[Xt],["query"]),get_pending_proposals:e.Func([],[e.Vec(Se)],["query"]),get_proposal_info:e.Func([e.Nat64],[e.Opt(Se)],["query"]),list_known_neurons:e.Func([],[Yt],["query"]),list_neurons:e.Func([Zt],[It],["query"]),list_node_providers:e.Func([],[Dt],["query"]),list_proposals:e.Func([Lt],[en],["query"]),manage_neuron:e.Func([he],[Ke],[]),settle_community_fund_participation:e.Func([pn],[ue],[]),simulate_manage_neuron:e.Func([he],[Ke],[]),transfer_gtc_neuron:e.Func([n,n],[ue],[]),update_node_provider:e.Func([_n],[ue],[])})};var D=require("@dfinity/principal"),_e=require("@dfinity/utils");var we=require("@dfinity/utils");var vn=require("buffer"),On=e=>Uint8Array.from(vn.Buffer.from(e,"hex")).subarray(4),bn=e=>vn.Buffer.from(e).toString("hex"),hn=(e,t)=>{let n=(0,we.asciiStringToByteArray)(`
account-id`),o=st.create();o.update((0,we.arrayOfNumberToUint8Array)([...n,...e.toUint8Array(),...t??Array(32).fill(0)]));let r=o.digest(),s=(0,we.bigEndianCrc32)(r),a=new Uint8Array([...s,...r]);return(0,we.uint8ArrayToHexString)(a)};var no=e=>({id:e}),Sn=e=>({id:e}),kr=e=>({followees:e.map(Sn)}),Cr=e=>{if("NeuronId"in e)return{NeuronId:{id:e.NeuronId}};if("Subaccount"in e)return{Subaccount:Uint8Array.from(e.Subaccount)};throw new S(e)},ct=e=>e.basisPoints!==void 0?{basis_points:[e.basisPoints]}:{basis_points:[]},ne=e=>e.seconds!==void 0?{seconds:[e.seconds]}:{seconds:[]},Ar=e=>e.secondsAfterUtcMidnight!==void 0?{seconds_after_utc_midnight:[e.secondsAfterUtcMidnight]}:{seconds_after_utc_midnight:[]},Vr=e=>({iso_codes:e.isoCodes}),oe=e=>e.e8s!==void 0?{e8s:[e.e8s]}:{e8s:[]},oo=e=>e.base64Encoding!==void 0?{base64_encoding:[e.base64Encoding]}:{base64_encoding:[]},Mr=e=>({reward_rate_transition_duration:e.rewardRateTransitionDuration!==void 0?[ne(e.rewardRateTransitionDuration)]:[],initial_reward_rate:e.initialRewardRate!==void 0?[ct(e.initialRewardRate)]:[],final_reward_rate:e.finalRewardRate!==void 0?[ct(e.finalRewardRate)]:[]}),Fr=e=>({transaction_fee:e.transactionFee!==void 0?[oe(e.transactionFee)]:[],token_symbol:e.tokenSymbol!==void 0?[e.tokenSymbol]:[],token_logo:e.tokenLogo!==void 0?[oo(e.tokenLogo)]:[],token_name:e.tokenName!==void 0?[e.tokenName]:[]}),qr=e=>({minimum_participants:e.minimumParticipants!==void 0?[e.minimumParticipants]:[],duration:e.duration!==void 0?[ne(e.duration)]:[],neuron_basket_construction_parameters:e.neuronBasketConstructionParameters!==void 0?[Br(e.neuronBasketConstructionParameters)]:[],confirmation_text:e.confirmationText!==void 0?[e.confirmationText]:[],maximum_participant_icp:e.maximumParticipantIcp!==void 0?[oe(e.maximumParticipantIcp)]:[],neurons_fund_investment_icp:e.neuronsFundInvestmentIcp!==void 0?[oe(e.neuronsFundInvestmentIcp)]:[],minimum_icp:e.minimumIcp!==void 0?[oe(e.minimumIcp)]:[],minimum_participant_icp:e.minimumParticipantIcp!==void 0?[oe(e.minimumParticipantIcp)]:[],start_time:e.startTime!==void 0?[Ar(e.startTime)]:[],maximum_icp:e.maximumIcp!==void 0?[oe(e.maximumIcp)]:[],restricted_countries:e.restrictedCountries!==void 0?[Vr(e.restrictedCountries)]:[]}),Br=e=>({dissolve_delay_interval:e.dissolveDelayInterval!==void 0?[ne(e.dissolveDelayInterval)]:[],count:e.count!==void 0?[e.count]:[]}),Er=e=>({neuron_maximum_dissolve_delay_bonus:e.neuronMaximumDissolveDelayBonus!==void 0?[ct(e.neuronMaximumDissolveDelayBonus)]:[],neuron_maximum_age_for_age_bonus:e.neuronMaximumAgeForAgeBonus!==void 0?[ne(e.neuronMaximumAgeForAgeBonus)]:[],neuron_maximum_dissolve_delay:e.neuronMaximumDissolveDelay!==void 0?[ne(e.neuronMaximumDissolveDelay)]:[],neuron_minimum_dissolve_delay_to_vote:e.neuronMinimumDissolveDelayToVote!==void 0?[ne(e.neuronMinimumDissolveDelayToVote)]:[],neuron_maximum_age_bonus:e.neuronMaximumAgeBonus!==void 0?[ct(e.neuronMaximumAgeBonus)]:[],neuron_minimum_stake:e.neuronMinimumStake!==void 0?[oe(e.neuronMinimumStake)]:[],proposal_wait_for_quiet_deadline_increase:e.proposalWaitForQuietDeadlineIncrease!==void 0?[ne(e.proposalWaitForQuietDeadlineIncrease)]:[],proposal_initial_voting_period:e.proposalInitialVotingPeriod!==void 0?[ne(e.proposalInitialVotingPeriod)]:[],proposal_rejection_fee:e.proposalRejectionFee!==void 0?[oe(e.proposalRejectionFee)]:[],voting_reward_parameters:e.votingRewardParameters!==void 0?[Mr(e.votingRewardParameters)]:[]}),eo=e=>({total:e.total!==void 0?[oe(e.total)]:[]}),Ur=e=>({treasury_distribution:e.treasuryDistribution!==void 0?[eo(e.treasuryDistribution)]:[],developer_distribution:e.developerDistribution!==void 0?[Wr(e.developerDistribution)]:[],swap_distribution:e.swapDistribution!==void 0?[eo(e.swapDistribution)]:[]}),Hr=e=>({controller:e.controller!==void 0?[D.Principal.fromText(e.controller)]:[],dissolve_delay:e.dissolveDelay!==void 0?[ne(e.dissolveDelay)]:[],memo:e.memo!==void 0?[e.memo]:[],vesting_period:e.vestingPeriod!==void 0?[ne(e.vestingPeriod)]:[],stake:e.stake!==void 0?[oe(e.stake)]:[]}),Wr=e=>({developer_neurons:e.developerNeurons.map(Hr)}),Gr=e=>({url:e.url!==void 0?[e.url]:[],governance_parameters:e.governanceParameters!==void 0?[Er(e.governanceParameters)]:[],fallback_controller_principal_ids:e.fallbackControllerPrincipalIds.map(D.Principal.fromText),logo:e.logo!==void 0?[oo(e.logo)]:[],name:e.name!==void 0?[e.name]:[],ledger_parameters:e.ledgerParameters!==void 0?[Fr(e.ledgerParameters)]:[],description:e.description!==void 0?[e.description]:[],dapp_canisters:e.dappCanisters.map(t=>({id:[D.Principal.fromText(t)]})),swap_parameters:e.swapParameters!==void 0?[qr(e.swapParameters)]:[],initial_token_distribution:e.initialTokenDistribution!==void 0?[Ur(e.initialTokenDistribution)]:[]}),ro=e=>{if("ExecuteNnsFunction"in e){let t=e.ExecuteNnsFunction;if(t.payloadBytes===void 0)throw new Error("payloadBytes not found");return{ExecuteNnsFunction:{nns_function:t.nnsFunctionId,payload:(0,_e.arrayBufferToUint8Array)(t.payloadBytes)}}}if("ManageNeuron"in e){let t=e.ManageNeuron;return{ManageNeuron:Jr(t)}}if("ApproveGenesisKyc"in e)return{ApproveGenesisKyc:{principals:e.ApproveGenesisKyc.principals.map(D.Principal.fromText)}};if("ManageNetworkEconomics"in e){let t=e.ManageNetworkEconomics;return{ManageNetworkEconomics:{neuron_minimum_stake_e8s:t.neuronMinimumStake,max_proposals_to_keep_per_topic:t.maxProposalsToKeepPerTopic,neuron_management_fee_per_proposal_e8s:t.neuronManagementFeePerProposal,reject_cost_e8s:t.rejectCost,transaction_fee_e8s:t.transactionFee,neuron_spawn_dissolve_delay_seconds:t.neuronSpawnDissolveDelaySeconds,minimum_icp_xdr_rate:t.minimumIcpXdrRate,maximum_node_provider_rewards_e8s:t.maximumNodeProviderRewards}}}if("RewardNodeProvider"in e){let t=e.RewardNodeProvider;return{RewardNodeProvider:{node_provider:t.nodeProvider?[dt(t.nodeProvider)]:[],amount_e8s:t.amountE8s,reward_mode:t.rewardMode!=null?[to(t.rewardMode)]:[]}}}if("RewardNodeProviders"in e){let t=e.RewardNodeProviders;return{RewardNodeProviders:{use_registry_derived_rewards:t.useRegistryDerivedRewards===void 0?[]:[t.useRegistryDerivedRewards],rewards:t.rewards.map(n=>({node_provider:n.nodeProvider?[dt(n.nodeProvider)]:[],amount_e8s:n.amountE8s,reward_mode:n.rewardMode!=null?[to(n.rewardMode)]:[]}))}}}if("AddOrRemoveNodeProvider"in e){let t=e.AddOrRemoveNodeProvider;return{AddOrRemoveNodeProvider:{change:t.change?[zr(t.change)]:[]}}}if("Motion"in e)return{Motion:{motion_text:e.Motion.motionText}};if("SetDefaultFollowees"in e)return{SetDefaultFollowees:{default_followees:e.SetDefaultFollowees.defaultFollowees.map(n=>[n.topic,kr(n.followees)])}};if("RegisterKnownNeuron"in e){let t=e.RegisterKnownNeuron;return{RegisterKnownNeuron:{id:[{id:t.id}],known_neuron_data:[{name:t.name,description:t.description!==void 0?[t.description]:[]}]}}}if("SetSnsTokenSwapOpenTimeWindow"in e){let{request:t,swapCanisterId:n}=e.SetSnsTokenSwapOpenTimeWindow;return{SetSnsTokenSwapOpenTimeWindow:{request:t===void 0?[]:[{open_time_window:t.openTimeWindow===void 0?[]:[{start_timestamp_seconds:t.openTimeWindow.startTimestampSeconds,end_timestamp_seconds:t.openTimeWindow.endTimestampSeconds}]}],swap_canister_id:n===void 0?[]:[D.Principal.fromText(n)]}}}if("OpenSnsTokenSwap"in e){let{communityFundInvestmentE8s:t,targetSwapCanisterId:n,params:o}=e.OpenSnsTokenSwap;return{OpenSnsTokenSwap:{community_fund_investment_e8s:(0,_e.toNullable)(t),target_swap_canister_id:(0,_e.toNullable)(n),params:o===void 0?[]:[{min_participant_icp_e8s:o.minParticipantIcpE8s,max_icp_e8s:o.maxIcpE8s,swap_due_timestamp_seconds:o.swapDueTimestampSeconds,min_participants:o.minParticipants,sns_token_e8s:o.snsTokenE8s,max_participant_icp_e8s:o.maxParticipantIcpE8s,min_icp_e8s:o.minIcpE8s,sale_delay_seconds:(0,_e.toNullable)(o.saleDelaySeconds),neuron_basket_construction_parameters:(0,_e.toNullable)(o.neuronBasketConstructionParameters)}]}}}if("CreateServiceNervousSystem"in e)return{CreateServiceNervousSystem:Gr(e.CreateServiceNervousSystem)};throw new S(e)},Kr=e=>{if("Split"in e)return{Split:{amount_e8s:e.Split.amount}};if("Follow"in e){let t=e.Follow;return{Follow:{topic:t.topic,followees:t.followees.map(Sn)}}}if("ClaimOrRefresh"in e){let t=e.ClaimOrRefresh;return{ClaimOrRefresh:{by:t.by?[$r(t.by)]:[]}}}if("Configure"in e){let t=e.Configure;return{Configure:{operation:t.operation?[jr(t.operation)]:[]}}}if("RegisterVote"in e){let t=e.RegisterVote;return{RegisterVote:{vote:t.vote,proposal:t.proposal?[no(t.proposal)]:[]}}}if("DisburseToNeuron"in e){let t=e.DisburseToNeuron;return{DisburseToNeuron:{dissolve_delay_seconds:t.dissolveDelaySeconds,kyc_verified:t.kycVerified,amount_e8s:t.amount,new_controller:t.newController?[D.Principal.fromText(t.newController)]:[],nonce:t.nonce}}}if("MergeMaturity"in e)return{MergeMaturity:{percentage_to_merge:e.MergeMaturity.percentageToMerge}};if("StakeMaturity"in e){let{percentageToStake:t}=e.StakeMaturity;return{StakeMaturity:{percentage_to_stake:(0,_e.toNullable)(t)}}}if("MakeProposal"in e){let t=e.MakeProposal;return{MakeProposal:{url:t.url,title:[],action:t.action?[ro(t.action)]:[],summary:t.summary}}}if("Disburse"in e){let t=e.Disburse;return{Disburse:{to_account:t.toAccountId?[xn(t.toAccountId)]:[],amount:t.amount?[so(t.amount)]:[]}}}if("Spawn"in e){let t=e.Spawn;return{Spawn:{percentage_to_spawn:t.percentageToSpawn===void 0?[]:[t.percentageToSpawn],new_controller:t.newController?[D.Principal.fromText(t.newController)]:[],nonce:[]}}}if("Merge"in e){let t=e.Merge;return{Merge:{source_neuron_id:t.sourceNeuronId?[{id:t.sourceNeuronId}]:[]}}}throw new S(e)},jr=e=>{if("RemoveHotKey"in e){let t=e.RemoveHotKey;return{RemoveHotKey:{hot_key_to_remove:t.hotKeyToRemove!=null?[D.Principal.fromText(t.hotKeyToRemove)]:[]}}}if("AddHotKey"in e){let t=e.AddHotKey;return{AddHotKey:{new_hot_key:t.newHotKey?[D.Principal.fromText(t.newHotKey)]:[]}}}if("StopDissolving"in e)return{StopDissolving:{}};if("StartDissolving"in e)return{StartDissolving:{}};if("IncreaseDissolveDelay"in e)return{IncreaseDissolveDelay:{additional_dissolve_delay_seconds:e.IncreaseDissolveDelay.additionalDissolveDelaySeconds}};if("JoinCommunityFund"in e||"LeaveCommunityFund"in e)return e;if("SetDissolveTimestamp"in e)return{SetDissolveTimestamp:{dissolve_timestamp_seconds:e.SetDissolveTimestamp.dissolveTimestampSeconds}};if("ChangeAutoStakeMaturity"in e){let{requestedSettingForAutoStakeMaturity:t}=e.ChangeAutoStakeMaturity;return{ChangeAutoStakeMaturity:{requested_setting_for_auto_stake_maturity:t}}}throw new S(e)},zr=e=>{if("ToRemove"in e)return{ToRemove:dt(e.ToRemove)};if("ToAdd"in e)return{ToAdd:dt(e.ToAdd)};throw new S(e)},dt=e=>({id:e.id!=null?[D.Principal.fromText(e.id)]:[],reward_account:e.rewardAccount!=null?[xn(e.rewardAccount)]:[]}),so=e=>({e8s:e}),xn=e=>({hash:On(e)}),to=e=>{if("RewardToNeuron"in e)return{RewardToNeuron:{dissolve_delay_seconds:e.RewardToNeuron.dissolveDelaySeconds}};if("RewardToAccount"in e)return{RewardToAccount:{to_account:e.RewardToAccount.toAccount!=null?[xn(e.RewardToAccount.toAccount)]:[]}};throw new S(e)},$r=e=>{if("NeuronIdOrSubaccount"in e)return{NeuronIdOrSubaccount:{}};if("Memo"in e)return{Memo:e.Memo};if("MemoAndController"in e)return{MemoAndController:{memo:e.MemoAndController.memo,controller:e.MemoAndController.controller?[e.MemoAndController.controller]:[]}};throw new S(e)},ao=e=>({neuron_ids:BigUint64Array.from(e??[]),include_neurons_readable_by_caller:!e}),Jr=({id:e,command:t,neuronIdOrSubaccount:n})=>({id:e?[Sn(e)]:[],command:t?[Kr(t)]:[],neuron_id_or_subaccount:n?[Cr(n)]:[]}),io=({includeRewardStatus:e,beforeProposal:t,excludeTopic:n,includeStatus:o,limit:r,includeAllManageNeuronProposals:s})=>({include_reward_status:Int32Array.from(e),before_proposal:t?[no(t)]:[],limit:r,exclude_topic:Int32Array.from(n),include_all_manage_neuron_proposals:s!==void 0?[s]:[],include_status:Int32Array.from(o)}),co=e=>({id:[],command:[{ClaimOrRefresh:{by:[{NeuronIdOrSubaccount:{}}]}}],neuron_id_or_subaccount:[{NeuronId:{id:e.neuronId}}]}),uo=({memo:e,controller:t})=>{let n={ClaimOrRefresh:{by:[{MemoAndController:{controller:t==null?[]:[t],memo:e}}]}};return{id:[],command:[n],neuron_id_or_subaccount:[]}},po=({neuronId:e,amount:t})=>({id:[],command:[{Split:{amount_e8s:t}}],neuron_id_or_subaccount:[{NeuronId:{id:e}}]});var _o=({neuronId:e,vote:t,proposalId:n})=>Re({neuronId:e,command:{RegisterVote:{vote:t,proposal:[{id:n}]}}}),lo=e=>{let t={MakeProposal:{url:e.url,title:e.title!=null?[e.title]:[],summary:e.summary,action:[ro(e.action)]}};return{id:[],command:[t],neuron_id_or_subaccount:[{NeuronId:{id:e.neuronId}}]}},mo=({neuronId:e,topic:t,followees:n})=>Re({neuronId:e,command:{Follow:{topic:t,followees:n.map(o=>({id:o}))}}}),fo=({neuronId:e,toAccountIdentifier:t,amount:n})=>Re({neuronId:e,command:{Disburse:{to_account:t!==void 0?[t.toAccountIdentifierHash()]:[],amount:n!==void 0?[so(n)]:[]}}}),No=({neuronId:e,percentageToMerge:t})=>Re({neuronId:e,command:{MergeMaturity:{percentage_to_merge:t}}}),wo=({neuronId:e,percentageToStake:t})=>Re({neuronId:e,command:{StakeMaturity:{percentage_to_stake:(0,_e.toNullable)(t)}}}),Ro=({neuronId:e,percentageToSpawn:t,newController:n,nonce:o})=>Re({neuronId:e,command:{Spawn:{percentage_to_spawn:t===void 0?[]:[t],new_controller:n===void 0?[]:[n],nonce:o===void 0?[]:[o]}}}),go=({neuronId:e,principal:t})=>le({neuronId:e,operation:{AddHotKey:{new_hot_key:[t]}}}),yo=({neuronId:e,principal:t})=>le({neuronId:e,operation:{RemoveHotKey:{hot_key_to_remove:[t]}}}),vo=({neuronId:e,additionalDissolveDelaySeconds:t})=>le({neuronId:e,operation:{IncreaseDissolveDelay:{additional_dissolve_delay_seconds:t}}}),Oo=({neuronId:e,dissolveDelaySeconds:t})=>le({neuronId:e,operation:{SetDissolveTimestamp:{dissolve_timestamp_seconds:BigInt(t)}}}),bo=e=>le({neuronId:e,operation:{JoinCommunityFund:{}}}),ho=({neuronId:e,autoStake:t})=>le({neuronId:e,operation:{ChangeAutoStakeMaturity:{requested_setting_for_auto_stake_maturity:t}}}),So=e=>le({neuronId:e,operation:{LeaveCommunityFund:{}}}),Tn=({sourceNeuronId:e,targetNeuronId:t})=>Re({neuronId:t,command:{Merge:{source_neuron_id:[{id:e}]}}}),xo=e=>le({neuronId:e,operation:{StartDissolving:{}}}),To=e=>le({neuronId:e,operation:{StopDissolving:{}}}),Re=({neuronId:e,command:t})=>({id:[{id:e}],command:[t],neuron_id_or_subaccount:[]}),le=({neuronId:e,operation:t})=>Re({neuronId:e,command:{Configure:{operation:[t]}}});var ut=require("@dfinity/principal");var Po=async e=>{let{PrincipalId:t,ManageNeuron:n,NeuronId:o}=await y(),r=new t;r.setSerializedId(ut.Principal.fromText(e.principal).toUint8Array());let s=new n.AddHotKey;s.setNewHotKey(r);let a=new n.Configure;a.setAddHotKey(s);let d=new n;d.setConfigure(a);let p=new o;return p.setId(e.neuronId.toString()),d.setNeuronId(p),d},ko=async e=>{let{PrincipalId:t,ManageNeuron:n,NeuronId:o}=await y(),r=new t;r.setSerializedId(ut.Principal.fromText(e.principal).toUint8Array());let s=new n.RemoveHotKey;s.setHotKeyToRemove(r);let a=new n.Configure;a.setRemoveHotKey(s);let d=new n;d.setConfigure(a);let p=new o;return p.setId(e.neuronId.toString()),d.setNeuronId(p),d},Co=async({neuronId:e,additionalDissolveDelaySeconds:t})=>{let{ManageNeuron:n,NeuronId:o}=await y(),r=new n.IncreaseDissolveDelay;r.setAdditionalDissolveDelaySeconds(t);let s=new n.Configure;s.setIncreaseDissolveDelay(r);let a=new n;a.setConfigure(s);let d=new o;return d.setId(e.toString()),a.setNeuronId(d),a},Ao=async e=>{let{ManageNeuron:t,NeuronId:n}=await y(),o=new t.Configure;o.setStartDissolving(new t.StartDissolving);let r=new t;r.setConfigure(o);let s=new n;return s.setId(e.toString()),r.setNeuronId(s),r},Vo=async e=>{let{ManageNeuron:t,NeuronId:n}=await y(),o=new t.Configure;o.setStopDissolving(new t.StopDissolving);let r=new t;r.setConfigure(o);let s=new n;return s.setId(e.toString()),r.setNeuronId(s),r},Mo=async e=>{let{ManageNeuron:t,NeuronId:n}=await y(),o=new t.Configure;o.setJoinCommunityFund(new t.JoinCommunityFund);let r=new t;r.setConfigure(o);let s=new n;return s.setId(e.toString()),r.setNeuronId(s),r},Fo=async e=>{let{ManageNeuron:t,NeuronId:n,AccountIdentifier:o}=await y(),r=new t.Disburse;if(e.toAccountId){let d=new o;d.setHash(Uint8Array.from(Buffer.from(e.toAccountId,"hex"))),r.setToAccount(d)}if(e.amount!=null){let d=new t.Disburse.Amount;d.setE8s(e.amount.toString()),r.setAmount(d)}let s=new t;s.setDisburse(r);let a=new n;return a.setId(e.neuronId.toString()),s.setNeuronId(a),s},qo=async e=>{let{ManageNeuron:t,NeuronId:n}=await y(),o=new t.MergeMaturity;o.setPercentageToMerge(e.percentageToMerge);let r=new t,s=new n;return s.setId(e.neuronId.toString()),r.setNeuronId(s),r.setMergeMaturity(o),r},Bo=async e=>{let{ManageNeuron:t,NeuronId:n,PrincipalId:o}=await y(),r=new t.Spawn;if(e.newController){let d=new o;d.setSerializedId(ut.Principal.fromText(e.newController).toUint8Array().slice(4)),r.setNewController(d)}e.percentageToSpawn!==void 0&&r.setPercentageToSpawn(e.percentageToSpawn);let s=new t;s.setSpawn(r);let a=new n;return a.setId(e.neuronId.toString()),s.setNeuronId(a),s};var Wo=require("@dfinity/principal"),u=require("@dfinity/utils");var Pn=({neuronId:e,neuronInfo:t,rawNeuron:n,canisterId:o})=>{let r=n?Qr({neuron:n,canisterId:o}):void 0;return{neuronId:e,dissolveDelaySeconds:t.dissolve_delay_seconds,recentBallots:t.recent_ballots.map(Go),createdTimestampSeconds:t.created_timestamp_seconds,state:t.state,joinedCommunityFundTimestampSeconds:t.joined_community_fund_timestamp_seconds.length?t.joined_community_fund_timestamp_seconds[0]:void 0,retrievedAtTimestampSeconds:t.retrieved_at_timestamp_seconds,votingPower:t.voting_power,ageSeconds:t.age_seconds,fullNeuron:r}},Qr=({neuron:e,canisterId:t})=>({id:e.id.length?ge(e.id[0]):void 0,stakedMaturityE8sEquivalent:(0,u.fromNullable)(e.staked_maturity_e8s_equivalent),controller:e.controller.length?e.controller[0].toString():void 0,recentBallots:e.recent_ballots.map(Go),kycVerified:e.kyc_verified,notForProfit:e.not_for_profit,cachedNeuronStake:e.cached_neuron_stake_e8s,createdTimestampSeconds:e.created_timestamp_seconds,autoStakeMaturity:(0,u.fromNullable)(e.auto_stake_maturity),maturityE8sEquivalent:e.maturity_e8s_equivalent,agingSinceTimestampSeconds:e.aging_since_timestamp_seconds,neuronFees:e.neuron_fees_e8s,hotKeys:e.hot_keys.map(n=>n.toString()),accountIdentifier:hn(t,e.account),joinedCommunityFundTimestampSeconds:e.joined_community_fund_timestamp_seconds.length?e.joined_community_fund_timestamp_seconds[0]:void 0,dissolveState:e.dissolve_state.length?Xr(e.dissolve_state[0]):void 0,spawnAtTimesSeconds:e.spawn_at_timestamp_seconds[0],followees:e.followees.map(([n,o])=>Ko({topic:n,followees:o}))}),Go=({vote:e,proposal_id:t})=>({vote:e,proposalId:t.length?ge(t[0]):void 0}),Xr=e=>"DissolveDelaySeconds"in e?{DissolveDelaySeconds:e.DissolveDelaySeconds}:{WhenDissolvedTimestampSeconds:e.WhenDissolvedTimestampSeconds},Ko=({topic:e,followees:t})=>({topic:e,followees:t.followees.map(ge)}),ge=({id:e})=>e,Yr=e=>{if("NeuronId"in e)return{NeuronId:e.NeuronId.id};if("Subaccount"in e)return{Subaccount:(0,u.uint8ArrayToArrayOfNumber)(e.Subaccount)};throw new S(e)},Zr=({neuronId:e,ballot:t})=>{let{vote:n,voting_power:o}=t;return{neuronId:e,vote:n,votingPower:o}},Ir=({title:e,url:t,action:n,summary:o})=>({title:e.length?e[0]:void 0,url:t,action:n.length?jo(n[0]):void 0,summary:o}),jo=e=>{var t;if("ExecuteNnsFunction"in e)return{ExecuteNnsFunction:{nnsFunctionId:e.ExecuteNnsFunction.nns_function}};if("ManageNeuron"in e){let n=e.ManageNeuron;return{ManageNeuron:{id:n.id.length?ge(n.id[0]):void 0,command:n.command.length?Lr(n.command[0]):void 0,neuronIdOrSubaccount:n.neuron_id_or_subaccount.length?Yr(n.neuron_id_or_subaccount[0]):void 0}}}if("ApproveGenesisKyc"in e)return{ApproveGenesisKyc:{principals:e.ApproveGenesisKyc.principals.map(o=>o.toString())}};if("ManageNetworkEconomics"in e){let n=e.ManageNetworkEconomics;return{ManageNetworkEconomics:{neuronMinimumStake:n.neuron_minimum_stake_e8s,maxProposalsToKeepPerTopic:n.max_proposals_to_keep_per_topic,neuronManagementFeePerProposal:n.neuron_management_fee_per_proposal_e8s,rejectCost:n.reject_cost_e8s,transactionFee:n.transaction_fee_e8s,neuronSpawnDissolveDelaySeconds:n.neuron_spawn_dissolve_delay_seconds,minimumIcpXdrRate:n.minimum_icp_xdr_rate,maximumNodeProviderRewards:n.maximum_node_provider_rewards_e8s}}}if("RewardNodeProvider"in e){let n=e.RewardNodeProvider;return{RewardNodeProvider:{nodeProvider:n.node_provider.length?pt(n.node_provider[0]):void 0,amountE8s:n.amount_e8s,rewardMode:n.reward_mode.length?Eo(n.reward_mode[0]):void 0}}}if("RewardNodeProviders"in e){let n=e.RewardNodeProviders;return{RewardNodeProviders:{useRegistryDerivedRewards:n.use_registry_derived_rewards.length?n.use_registry_derived_rewards[0]:void 0,rewards:n.rewards.map(o=>({nodeProvider:o.node_provider.length?pt(o.node_provider[0]):void 0,amountE8s:o.amount_e8s,rewardMode:o.reward_mode.length?Eo(o.reward_mode[0]):void 0}))}}}if("AddOrRemoveNodeProvider"in e){let n=e.AddOrRemoveNodeProvider;return{AddOrRemoveNodeProvider:{change:n.change.length?ts(n.change[0]):void 0}}}if("Motion"in e)return{Motion:{motionText:e.Motion.motion_text}};if("SetDefaultFollowees"in e)return{SetDefaultFollowees:{defaultFollowees:e.SetDefaultFollowees.default_followees.map(([o,r])=>Ko({topic:o,followees:r}))}};if("RegisterKnownNeuron"in e){let n=e.RegisterKnownNeuron;return{RegisterKnownNeuron:rs(n)}}if("SetSnsTokenSwapOpenTimeWindow"in e){let n=e.SetSnsTokenSwapOpenTimeWindow,o=(t=n.request)!=null&&t.length?{openTimeWindow:n.request[0].open_time_window.length?{startTimestampSeconds:n.request[0].open_time_window[0].start_timestamp_seconds,endTimestampSeconds:n.request[0].open_time_window[0].end_timestamp_seconds}:void 0}:void 0,r=n!=null&&n.swap_canister_id.length?n.swap_canister_id[0].toString():void 0;return{SetSnsTokenSwapOpenTimeWindow:{request:o,swapCanisterId:r}}}if("OpenSnsTokenSwap"in e){let n=e.OpenSnsTokenSwap,o=(0,u.fromNullable)(n.params);return{OpenSnsTokenSwap:{communityFundInvestmentE8s:(0,u.fromNullable)(n.community_fund_investment_e8s),targetSwapCanisterId:(0,u.fromNullable)(n.target_swap_canister_id),...o!==void 0&&{params:{minParticipantIcpE8s:o.min_participant_icp_e8s,maxIcpE8s:o.max_icp_e8s,swapDueTimestampSeconds:o.swap_due_timestamp_seconds,minParticipants:o.min_participants,snsTokenE8s:o.sns_token_e8s,maxParticipantIcpE8s:o.max_participant_icp_e8s,minIcpE8s:o.min_icp_e8s,saleDelaySeconds:(0,u.fromNullable)(o.sale_delay_seconds),neuronBasketConstructionParameters:(0,u.fromNullable)(o.neuron_basket_construction_parameters)}}}}}if("CreateServiceNervousSystem"in e){let n=e.CreateServiceNervousSystem;return{CreateServiceNervousSystem:{url:(0,u.fromNullable)(n.url),governanceParameters:ms((0,u.fromNullable)(n.governance_parameters)),fallbackControllerPrincipalIds:n.fallback_controller_principal_ids.map(o=>o.toString()),logo:Xo((0,u.fromNullable)(n.logo)),name:(0,u.fromNullable)(n.name),ledgerParameters:_s((0,u.fromNullable)(n.ledger_parameters)),description:(0,u.fromNullable)(n.description),dappCanisters:n.dapp_canisters.map(ps)??[],swapParameters:Ns((0,u.fromNullable)(n.swap_parameters)),initialTokenDistribution:gs((0,u.fromNullable)(n.initial_token_distribution))}}}throw new S(e)},Dr=e=>({no:e.no,yes:e.yes,total:e.total,timestampSeconds:e.timestamp_seconds}),Lr=e=>{if("Spawn"in e){let t=e.Spawn;return{Spawn:{newController:t.new_controller.length?t.new_controller[0].toString():void 0,percentageToSpawn:t.percentage_to_spawn.length?t.percentage_to_spawn[0]:0}}}if("Split"in e)return{Split:{amount:e.Split.amount_e8s}};if("Follow"in e){let t=e.Follow;return{Follow:{topic:t.topic,followees:t.followees.map(ge)}}}if("ClaimOrRefresh"in e){let t=e.ClaimOrRefresh;return{ClaimOrRefresh:{by:t.by.length?os(t.by[0]):void 0}}}if("Configure"in e){let t=e.Configure;return{Configure:{operation:t.operation.length?es(t.operation[0]):void 0}}}if("RegisterVote"in e){let t=e.RegisterVote;return{RegisterVote:{vote:t.vote,proposal:t.proposal.length?ge(t.proposal[0]):void 0}}}if("DisburseToNeuron"in e){let t=e.DisburseToNeuron;return{DisburseToNeuron:{dissolveDelaySeconds:t.dissolve_delay_seconds,kycVerified:t.kyc_verified,amount:t.amount_e8s,newController:t.new_controller.length?t.new_controller[0].toString():void 0,nonce:t.nonce}}}if("MergeMaturity"in e)return{MergeMaturity:{percentageToMerge:e.MergeMaturity.percentage_to_merge}};if("StakeMaturity"in e){let{percentage_to_stake:t}=e.StakeMaturity;return{StakeMaturity:{percentageToStake:(0,u.fromNullable)(t)}}}if("MakeProposal"in e){let t=e.MakeProposal;return{MakeProposal:{title:t.title.length?t.title[0]:void 0,url:t.url,action:t.action.length?jo(t.action[0]):void 0,summary:t.summary}}}if("Disburse"in e){let t=e.Disburse;return{Disburse:{toAccountId:t.to_account.length?kn(t.to_account[0]):void 0,amount:t.amount.length?ns(t.amount[0]):void 0}}}if("Merge"in e){let t=e.Merge;return{Merge:{sourceNeuronId:t.source_neuron_id.length?t.source_neuron_id[0].id:void 0}}}throw new S(e)},es=e=>{if("RemoveHotKey"in e){let t=e.RemoveHotKey;return{RemoveHotKey:{hotKeyToRemove:t.hot_key_to_remove.length?t.hot_key_to_remove[0].toString():void 0}}}if("AddHotKey"in e){let t=e.AddHotKey;return{AddHotKey:{newHotKey:t.new_hot_key.length?t.new_hot_key[0].toString():void 0}}}if("StopDissolving"in e)return{StopDissolving:{}};if("StartDissolving"in e)return{StartDissolving:{}};if("IncreaseDissolveDelay"in e)return{IncreaseDissolveDelay:{additionalDissolveDelaySeconds:e.IncreaseDissolveDelay.additional_dissolve_delay_seconds}};if("JoinCommunityFund"in e||"LeaveCommunityFund"in e)return e;if("SetDissolveTimestamp"in e)return{SetDissolveTimestamp:{dissolveTimestampSeconds:e.SetDissolveTimestamp.dissolve_timestamp_seconds}};if("ChangeAutoStakeMaturity"in e){let{requested_setting_for_auto_stake_maturity:t}=e.ChangeAutoStakeMaturity;return{ChangeAutoStakeMaturity:{requestedSettingForAutoStakeMaturity:t}}}throw new S(e)},ts=e=>{if("ToRemove"in e)return{ToRemove:pt(e.ToRemove)};if("ToAdd"in e)return{ToAdd:pt(e.ToAdd)};throw new S(e)},pt=e=>({id:e.id.length?e.id[0].toString():void 0,rewardAccount:e.reward_account.length?kn(e.reward_account[0]):void 0}),ns=e=>e.e8s,kn=e=>bn(new Uint8Array(e.hash)),Eo=e=>{if("RewardToNeuron"in e)return{RewardToNeuron:{dissolveDelaySeconds:e.RewardToNeuron.dissolve_delay_seconds}};if("RewardToAccount"in e)return{RewardToAccount:{toAccount:e.RewardToAccount.to_account!=null&&e.RewardToAccount.to_account.length?kn(e.RewardToAccount.to_account[0]):void 0}};throw new S(e)},os=e=>{if("NeuronIdOrSubaccount"in e)return{NeuronIdOrSubaccount:{}};if("Memo"in e)return{Memo:e.Memo};if("MemoAndController"in e)return{MemoAndController:{memo:e.MemoAndController.memo,controller:e.MemoAndController.controller.length?e.MemoAndController.controller[0]:void 0}};throw new S(e)},Cn=e=>({id:e.id.length?ge(e.id[0]):void 0,ballots:e.ballots.map(t=>Zr({neuronId:t[0],ballot:t[1]})),rejectCost:e.reject_cost_e8s,proposalTimestampSeconds:e.proposal_timestamp_seconds,rewardEventRound:e.reward_event_round,failedTimestampSeconds:e.failed_timestamp_seconds,deadlineTimestampSeconds:(0,u.fromNullable)(e.deadline_timestamp_seconds),decidedTimestampSeconds:e.decided_timestamp_seconds,proposal:e.proposal.length?Ir(e.proposal[0]):void 0,proposer:e.proposer.length?ge(e.proposer[0]):void 0,latestTally:e.latest_tally.length?Dr(e.latest_tally[0]):void 0,executedTimestampSeconds:e.executed_timestamp_seconds,topic:e.topic,status:e.status,rewardStatus:e.reward_status}),zo=({response:{neuron_infos:e,full_neurons:t},canisterId:n})=>e.map(([o,r])=>Pn({neuronId:o,neuronInfo:r,rawNeuron:t.find(s=>s.id.length&&s.id[0].id===o),canisterId:n})),$o=({proposal_info:e})=>({proposals:e.map(Cn)}),rs=({id:e,known_neuron_data:t})=>{var n,o,r;return{id:((n=e[0])==null?void 0:n.id)??BigInt(0),name:((o=t[0])==null?void 0:o.name)??"",description:((r=t[0])==null?void 0:r.description[0])??""}},Jo=e=>{let t=e.getProposalId();return{vote:e.getVote(),proposalId:t!==void 0?BigInt(t.getId()):void 0}},ss=e=>e!=null&&e.hasWhenDissolvedTimestampSeconds()?2:e!=null&&e.hasDissolveDelaySeconds()?e.getDissolveDelaySeconds()==="0"?3:1:0,as=e=>e.toArray().map(([t,n])=>{var o;return{topic:Number(t),followees:((o=n.getFolloweesList)==null?void 0:o.call(n).map(r=>BigInt(r.getId())))??[]}}),Uo=e=>Wo.Principal.fromUint8Array(e.getSerializedId_asU8()).toText(),is=({neuron:e,canisterId:t})=>{let n=L.fromBytes(e.getAccount_asU8());return q.fromPrincipal({principal:t,subAccount:n})},cs=({pbNeuron:e,pbNeuronInfo:t,canisterId:n})=>{let o=e.getId(),r=e.getController(),s=r===void 0?r:Uo(r),a;return e.hasWhenDissolvedTimestampSeconds()?a={WhenDissolvedTimestampSeconds:BigInt(e.getWhenDissolvedTimestampSeconds())}:e.hasDissolveDelaySeconds()&&(a={DissolveDelaySeconds:BigInt(e.getDissolveDelaySeconds())}),{id:o===void 0?void 0:BigInt(o.getId()),stakedMaturityE8sEquivalent:void 0,controller:s,recentBallots:t.getRecentBallotsList().map(Jo),kycVerified:e.getKycVerified(),notForProfit:e.getNotForProfit(),cachedNeuronStake:BigInt(e.getCachedNeuronStakeE8s()),createdTimestampSeconds:BigInt(e.getCreatedTimestampSeconds()),autoStakeMaturity:void 0,maturityE8sEquivalent:BigInt(e.getMaturityE8sEquivalent()),agingSinceTimestampSeconds:BigInt(e.getAgingSinceTimestampSeconds()),spawnAtTimesSeconds:e.hasSpawnAtTimestampSeconds()?BigInt(e.getSpawnAtTimestampSeconds()):void 0,neuronFees:BigInt(e.getNeuronFeesE8s()),hotKeys:e.getHotKeysList().map(Uo),accountIdentifier:is({neuron:e,canisterId:n}).toHex(),joinedCommunityFundTimestampSeconds:void 0,dissolveState:a,followees:as(e.getFolloweesMap())}},Qo=({pbNeurons:e,canisterId:t})=>n=>{let o=e.find(s=>{var a;return((a=s.getId())==null?void 0:a.getId())===n.getKey()}),r=n.getValue();if(r===void 0)throw new Error(`NeuronInfo not present for neuron ${n.getKey()}`);return{neuronId:BigInt(n.getKey()),dissolveDelaySeconds:BigInt(r.getDissolveDelaySeconds()),recentBallots:r.getRecentBallotsList().map(Jo),createdTimestampSeconds:BigInt(r.getCreatedTimestampSeconds()),state:ss(o),joinedCommunityFundTimestampSeconds:void 0,retrievedAtTimestampSeconds:BigInt(r.getRetrievedAtTimestampSeconds()),votingPower:BigInt(r.getVotingPower()),ageSeconds:BigInt(r.getAgeSeconds()),fullNeuron:o===void 0?void 0:cs({pbNeuron:o,pbNeuronInfo:r,canisterId:t})}},_t=e=>e===void 0?void 0:{basisPoints:(0,u.fromNullable)(e.basis_points)},re=e=>e===void 0?void 0:{seconds:(0,u.fromNullable)(e.seconds)},ds=e=>e===void 0?void 0:{secondsAfterUtcMidnight:(0,u.fromNullable)(e.seconds_after_utc_midnight)},us=e=>e===void 0?void 0:{isoCodes:e.iso_codes},se=e=>e===void 0?void 0:{e8s:(0,u.fromNullable)(e.e8s)},ps=e=>e===void 0||e.id.length===0?void 0:(0,u.fromDefinedNullable)(e.id).toString(),Xo=e=>e===void 0?void 0:{base64Encoding:(0,u.fromNullable)(e.base64_encoding)},_s=e=>e===void 0?void 0:{transactionFee:se((0,u.fromNullable)(e.transaction_fee)),tokenSymbol:(0,u.fromNullable)(e.token_symbol),tokenLogo:Xo((0,u.fromNullable)(e.token_logo)),tokenName:(0,u.fromNullable)(e.token_name)},ls=e=>e===void 0?void 0:{rewardRateTransitionDuration:re((0,u.fromNullable)(e.reward_rate_transition_duration)),initialRewardRate:_t((0,u.fromNullable)(e.initial_reward_rate)),finalRewardRate:_t((0,u.fromNullable)(e.final_reward_rate))},ms=e=>e===void 0?void 0:{neuronMaximumDissolveDelayBonus:_t((0,u.fromNullable)(e.neuron_maximum_dissolve_delay_bonus)),neuronMaximumAgeForAgeBonus:re((0,u.fromNullable)(e.neuron_maximum_age_for_age_bonus)),neuronMaximumDissolveDelay:re((0,u.fromNullable)(e.neuron_maximum_dissolve_delay)),neuronMinimumDissolveDelayToVote:re((0,u.fromNullable)(e.neuron_minimum_dissolve_delay_to_vote)),neuronMaximumAgeBonus:_t((0,u.fromNullable)(e.neuron_maximum_age_bonus)),neuronMinimumStake:se((0,u.fromNullable)(e.neuron_minimum_stake)),proposalWaitForQuietDeadlineIncrease:re((0,u.fromNullable)(e.proposal_wait_for_quiet_deadline_increase)),proposalInitialVotingPeriod:re((0,u.fromNullable)(e.proposal_initial_voting_period)),proposalRejectionFee:se((0,u.fromNullable)(e.proposal_rejection_fee)),votingRewardParameters:ls((0,u.fromNullable)(e.voting_reward_parameters))},fs=e=>e===void 0?void 0:{dissolveDelayInterval:re((0,u.fromNullable)(e.dissolve_delay_interval)),count:(0,u.fromNullable)(e.count)},Ns=e=>e===void 0?void 0:{minimumParticipants:(0,u.fromNullable)(e.minimum_participants),duration:re((0,u.fromNullable)(e.duration)),neuronBasketConstructionParameters:fs((0,u.fromNullable)(e.neuron_basket_construction_parameters)),confirmationText:(0,u.fromNullable)(e.confirmation_text),maximumParticipantIcp:se((0,u.fromNullable)(e.maximum_participant_icp)),neuronsFundInvestmentIcp:se((0,u.fromNullable)(e.neurons_fund_investment_icp)),minimumIcp:se((0,u.fromNullable)(e.minimum_icp)),minimumParticipantIcp:se((0,u.fromNullable)(e.minimum_participant_icp)),startTime:ds((0,u.fromNullable)(e.start_time)),maximumIcp:se((0,u.fromNullable)(e.maximum_icp)),restrictedCountries:us((0,u.fromNullable)(e.restricted_countries))},Ho=e=>e===void 0?void 0:{total:se((0,u.fromNullable)(e.total))},ws=e=>e===void 0?void 0:{controller:e.controller.length===0?void 0:e.controller[0].toString(),dissolveDelay:re((0,u.fromNullable)(e.dissolve_delay)),memo:(0,u.fromNullable)(e.memo),vestingPeriod:re((0,u.fromNullable)(e.vesting_period)),stake:se((0,u.fromNullable)(e.stake))},Rs=e=>e===void 0?void 0:{developerNeurons:e.developer_neurons.map(ws)},gs=e=>e===void 0?void 0:{treasuryDistribution:Ho((0,u.fromNullable)(e.treasury_distribution)),developerDistribution:Rs((0,u.fromNullable)(e.developer_distribution)),swapDistribution:Ho((0,u.fromNullable)(e.swap_distribution))};var Yo=async e=>{let{ManageNeuronResponse:t}=await y(),o=t.deserializeBinary(e).getError();if(o)throw new H({error_message:o.getErrorMessage(),error_type:o.getErrorType()})};var Ie=e=>{let{command:t}=e,n=t[0];if(!n)throw new H({error_message:"Error updating neuron",error_type:0});if("Error"in n)throw new H(n.Error);return n},P=async({request:e,service:t})=>{let n=await t.manage_neuron(e);Ie(n)},Zo=async({request:e,service:t})=>{let n=await t.simulate_manage_neuron(e);return Ie(n)};var ma=BigInt(1095062083),fa=BigInt(1347768404),De=BigInt(1e4),Io=BigInt(1e8);var Do=require("@dfinity/utils");var lt=e=>{if(e.length!=64)throw new Ce(`Invalid account identifier ${e}. The account identifier must be 64 chars in length.`);let t=Buffer.from(e,"hex"),n=t.slice(0,4),o=Buffer.from((0,Do.bigEndianCrc32)(t.slice(4)));if(!o.equals(n))throw new Ce(`Account identifier ${e} has an invalid checksum. Are you sure the account identifier is correct?

Expected checksum: ${o.toString("hex")}
Found checksum: ${n.toString("hex")}`)};var Me=class{constructor(t,n,o,r,s=!1){this.canisterId=t;this.service=n;this.certifiedService=o;this.agent=r;this.hardwareWallet=s;this.listNeurons=async({certified:t=!0,neuronIds:n})=>{if(this.hardwareWallet&&!t)throw new Je;if(this.hardwareWallet)return this.listNeuronsHardwareWallet();let o=ao(n),r=await this.getGovernanceService(t).list_neurons(o);return zo({response:r,canisterId:this.canisterId})};this.listKnownNeurons=async(t=!0)=>(await this.getGovernanceService(t).list_known_neurons()).known_neurons.map(o=>{var r,s,a;return{id:((r=(0,m.fromNullable)(o.id))==null?void 0:r.id)??BigInt(0),name:((s=(0,m.fromNullable)(o.known_neuron_data))==null?void 0:s.name)??"",description:(0,m.fromNullable)(((a=(0,m.fromNullable)(o.known_neuron_data))==null?void 0:a.description)??[])}});this.getLastestRewardEvent=async(t=!0)=>this.getGovernanceService(t).get_latest_reward_event();this.listProposals=async({request:t,certified:n=!0})=>{let o=io(t),r=await this.getGovernanceService(n).list_proposals(o);return $o(r)};this.stakeNeuron=async({stake:t,principal:n,fromSubAccount:o,ledgerCanister:r,createdAt:s,fee:a})=>{if(t<Io)throw new $e(t);let d=new Uint8Array((0,Lo.default)(8)),p=(0,m.uint8ArrayToBigInt)(d),N=this.buildNeuronStakeSubAccount(d,n),l=q.fromPrincipal({principal:this.canisterId,subAccount:N});await r.transfer({memo:p,amount:t,fromSubAccount:o,to:l,createdAt:s,fee:a});let _=await this.claimOrRefreshNeuronFromAccount({controller:n,memo:p});if((0,m.isNullish)(_))throw new ze;return _};this.increaseDissolveDelay=async({neuronId:t,additionalDissolveDelaySeconds:n})=>{if(this.hardwareWallet)return this.increaseDissolveDelayHardwareWallet({neuronId:t,additionalDissolveDelaySeconds:n});let o=vo({neuronId:t,additionalDissolveDelaySeconds:n});return P({request:o,service:this.certifiedService})};this.setDissolveDelay=async({neuronId:t,dissolveDelaySeconds:n})=>{let o=Oo({neuronId:t,dissolveDelaySeconds:n});return P({request:o,service:this.certifiedService})};this.startDissolving=async t=>{if(this.hardwareWallet)return this.startDissolvingHardwareWallet(t);let n=xo(t);return P({request:n,service:this.certifiedService})};this.stopDissolving=async t=>{if(this.hardwareWallet)return this.stopDissolvingHardwareWallet(t);let n=To(t);return P({request:n,service:this.certifiedService})};this.joinCommunityFund=async t=>{if(this.hardwareWallet)return this.joinCommunityFundHardwareWallet(t);let n=bo(t);return P({request:n,service:this.certifiedService})};this.autoStakeMaturity=t=>P({request:ho(t),service:this.certifiedService});this.leaveCommunityFund=async t=>{let n=So(t);return P({request:n,service:this.certifiedService})};this.setNodeProviderAccount=async t=>{lt(t);let n=q.fromHex(t),o=await this.certifiedService.update_node_provider({reward_account:[n.toAccountIdentifierHash()]});if("Err"in o)throw new H(o.Err)};this.mergeNeurons=async t=>{let n=Tn(t);return P({request:n,service:this.certifiedService})};this.simulateMergeNeurons=async t=>{var p;let n=Tn(t),o=await Zo({request:n,service:this.certifiedService}),r,s,a,d;if("Merge"in o&&(0,m.nonNullish)(r=o.Merge)&&(0,m.nonNullish)(s=(0,m.fromNullable)(r.target_neuron_info))&&(0,m.nonNullish)(a=(0,m.fromNullable)(r.target_neuron))&&(0,m.nonNullish)(d=(p=(0,m.fromNullable)(a.id))==null?void 0:p.id))return Pn({neuronId:d,neuronInfo:s,rawNeuron:a,canisterId:this.canisterId});throw new ee(`simulateMergeNeurons: Unrecognized Merge error in ${JSON.stringify(o)}`)};this.splitNeuron=async({neuronId:t,amount:n})=>{let o=po({neuronId:t,amount:n}),r=await this.certifiedService.manage_neuron(o),s=Ie(r);if("Split"in s){let a=(0,m.fromNullable)(s.Split.created_neuron_id);if((0,m.isNullish)(a))throw new H({error_message:"Unexpected error splitting neuron. No neuronId in Split response.",error_type:0});return a.id}throw new ee(`Unrecognized Split error in ${JSON.stringify(r)}`)};this.getProposal=async({proposalId:t,certified:n=!0})=>{let[o]=await this.getGovernanceService(n).get_proposal_info(t);return o?Cn(o):void 0};this.makeProposal=async t=>{let n=lo(t);return P({request:n,service:this.certifiedService})};this.registerVote=async({neuronId:t,vote:n,proposalId:o})=>{let r=_o({neuronId:t,vote:n,proposalId:o});return P({request:r,service:this.certifiedService})};this.setFollowees=async t=>{let n=mo(t);return P({request:n,service:this.certifiedService})};this.disburse=async({neuronId:t,toAccountId:n,amount:o})=>{if((0,m.nonNullish)(n)&&lt(n),this.hardwareWallet)return this.disburseHardwareWallet({neuronId:t,toAccountId:n,amount:o});let r=(0,m.nonNullish)(n)?q.fromHex(n):void 0,s=fo({neuronId:t,toAccountIdentifier:r,amount:o});return P({request:s,service:this.certifiedService})};this.mergeMaturity=async({neuronId:t,percentageToMerge:n})=>{if((0,m.assertPercentageNumber)(n),this.hardwareWallet)return this.mergeMaturityHardwareWallet({neuronId:t,percentageToMerge:n});let o=No({neuronId:t,percentageToMerge:n});return P({request:o,service:this.certifiedService})};this.stakeMaturity=async({neuronId:t,percentageToStake:n})=>{(0,m.assertPercentageNumber)(n??100),await P({request:wo({neuronId:t,percentageToStake:n}),service:this.certifiedService})};this.spawnNeuron=async({neuronId:t,percentageToSpawn:n,newController:o,nonce:r})=>{var N;if((0,m.nonNullish)(n)&&(0,m.assertPercentageNumber)(n),this.hardwareWallet)return this.spawnHardwareWallet({neuronId:t,percentageToSpawn:n,newController:o==null?void 0:o.toText()});let s=Ro({neuronId:t,percentageToSpawn:n,newController:o,nonce:r}),a=await this.certifiedService.manage_neuron(s),d=Ie(a),p;if("Spawn"in d&&(0,m.nonNullish)(p=(N=(0,m.fromNullable)(d.Spawn.created_neuron_id))==null?void 0:N.id))return p;throw new ee(`Unrecognized Spawn error in ${JSON.stringify(a)}`)};this.addHotkey=async({neuronId:t,principal:n})=>{if(this.hardwareWallet)return this.addHotkeyHardwareWallet({neuronId:t,principal:n});let o=go({neuronId:t,principal:n});return P({request:o,service:this.certifiedService})};this.removeHotkey=async({neuronId:t,principal:n})=>{if(this.hardwareWallet)return this.removeHotkeyHardwareWallet({neuronId:t,principal:n});let o=yo({neuronId:t,principal:n});return P({request:o,service:this.certifiedService})};this.claimOrRefreshNeuronFromAccount=async({memo:t,controller:n})=>{var a;let o=uo({memo:t,controller:n}),r=await this.certifiedService.manage_neuron(o),s;if((0,m.nonNullish)(s=(0,m.fromNullable)(r.command))&&"ClaimOrRefresh"in s)return(a=(0,m.fromNullable)(s.ClaimOrRefresh.refreshed_neuron_id))==null?void 0:a.id;throw new ee(`Unrecognized ClaimOrRefresh error in ${JSON.stringify(r)}`)};this.claimOrRefreshNeuron=async t=>{var s;let n=co(t),o=await this.service.manage_neuron(n),r;if((0,m.nonNullish)(r=(0,m.fromNullable)(o.command))&&"ClaimOrRefresh"in r)return(s=(0,m.fromNullable)(r.ClaimOrRefresh.refreshed_neuron_id))==null?void 0:s.id;throw new ee(`Unrecognized ClaimOrRefresh error in ${JSON.stringify(o)}`)};this.buildNeuronStakeSubAccount=(t,n)=>{let o=(0,m.asciiStringToByteArray)("neuron-stake"),r=qn.create();return r.update((0,m.arrayOfNumberToUint8Array)([12,...o,...n.toUint8Array(),...t])),L.fromBytes(r.digest())};this.getNeuron=async({certified:t=!0,neuronId:n})=>{let[o]=await this.listNeurons({certified:t,neuronIds:[n]});return o};this.listNeuronsHardwareWallet=async()=>{let{ListNeurons:t,ListNeuronsResponse:n}=await y(),o=new t;o.setIncludeNeuronsReadableByCaller(!0);let r=await Pe({agent:this.agent,canisterId:this.canisterId,methodName:"list_neurons_pb",arg:o.serializeBinary()}),s=n.deserializeBinary(r),a=s.getFullNeuronsList();return s.getNeuronIdsList().map(Qo({pbNeurons:a,canisterId:this.canisterId}))};this.manageNeuronUpdateCall=async t=>{let n=await Pe({agent:this.agent,canisterId:this.canisterId,methodName:"manage_neuron_pb",arg:t.serializeBinary()});await Yo(n)};this.addHotkeyHardwareWallet=async({neuronId:t,principal:n})=>{let o=await Po({neuronId:t,principal:n.toText()});await this.manageNeuronUpdateCall(o)};this.removeHotkeyHardwareWallet=async({neuronId:t,principal:n})=>{let o=await ko({neuronId:t,principal:n.toText()});await this.manageNeuronUpdateCall(o)};this.increaseDissolveDelayHardwareWallet=async({neuronId:t,additionalDissolveDelaySeconds:n})=>{let o=await Co({neuronId:t,additionalDissolveDelaySeconds:n});await this.manageNeuronUpdateCall(o)};this.startDissolvingHardwareWallet=async t=>{let n=await Ao(t);await this.manageNeuronUpdateCall(n)};this.stopDissolvingHardwareWallet=async t=>{let n=await Vo(t);await this.manageNeuronUpdateCall(n)};this.joinCommunityFundHardwareWallet=async t=>{let n=await Mo(t);await this.manageNeuronUpdateCall(n)};this.disburseHardwareWallet=async t=>{let n=await Fo(t);await this.manageNeuronUpdateCall(n)};this.mergeMaturityHardwareWallet=async t=>{let n=await qo(t);await this.manageNeuronUpdateCall(n)};this.spawnHardwareWallet=async t=>{var p;let n=await Bo(t),o=await Pe({agent:this.agent,canisterId:this.canisterId,methodName:"manage_neuron_pb",arg:n.serializeBinary()}),{ManageNeuronResponse:r}=await y(),s=r.deserializeBinary(o),a=s.getError();if(a)throw new H({error_message:a.getErrorMessage(),error_type:a.getErrorType()});let d=(p=s.getSpawn())==null?void 0:p.getCreatedNeuronId();if((0,m.nonNullish)(d))return BigInt(d.getId());throw new ee(`Unrecognized Spawn error in ${JSON.stringify(s)}`)};this.canisterId=t,this.service=n,this.certifiedService=o,this.agent=r,this.hardwareWallet=s}static create(t={}){let n=t.canisterId??$n,{service:o,certifiedService:r,agent:s}=(0,m.createServices)({options:{...t,canisterId:n},idlFactory:Ln,certifiedIdlFactory:Dn});return new Me(n,o,r,s,t.hardwareWallet)}getGovernanceService(t){return t?this.certifiedService:this.service}};var Le=require("@dfinity/utils");var Te=class{constructor(t,n){this.e8s=t;this.token=n}static fromE8s(t){return new Te(t,Le.ICPToken)}static fromString(t){let n=(0,Le.convertStringToE8s)(t);return typeof n=="bigint"?new Te(n,Le.ICPToken):n}toE8s(){return this.e8s}async toProto(){let{ICPTs:t}=await y(),n=new t;return n.setE8s(this.e8s.toString()),n}};var ar=require("@dfinity/utils");var er=({IDL:e})=>{let t=e.Vec(e.Nat8),n=e.Record({owner:e.Principal,subaccount:e.Opt(t)}),o=e.Record({maximum_number_of_accounts:e.Opt(e.Nat64),icrc1_minting_account:e.Opt(n)}),r=e.Record({e8s:e.Nat64}),s=e.Text,a=e.Record({secs:e.Nat64,nanos:e.Nat32}),d=e.Record({num_blocks_to_archive:e.Nat64,trigger_threshold:e.Nat64,max_message_size_bytes:e.Opt(e.Nat64),cycles_for_archive_creation:e.Opt(e.Nat64),node_max_memory_size_bytes:e.Opt(e.Nat64),controller_id:e.Principal}),p=e.Record({send_whitelist:e.Vec(e.Principal),token_symbol:e.Opt(e.Text),transfer_fee:e.Opt(r),minting_account:s,transaction_window:e.Opt(a),max_message_size_bytes:e.Opt(e.Nat64),icrc1_minting_account:e.Opt(n),archive_options:e.Opt(d),initial_values:e.Vec(e.Tuple(s,r)),token_name:e.Opt(e.Text)}),N=e.Variant({Upgrade:e.Opt(o),Init:p}),l=e.Nat64,_=e.Record({start:l,length:e.Nat64}),w=e.Nat64,f=e.Vec(e.Nat8),g=e.Record({timestamp_nanos:e.Nat64}),c=e.Variant({Approve:e.Record({fee:r,from:f,allowance_e8s:e.Int,expires_at:e.Opt(g),spender:f}),Burn:e.Record({from:f,amount:r}),Mint:e.Record({to:f,amount:r}),Transfer:e.Record({to:f,fee:r,from:f,amount:r}),TransferFrom:e.Record({to:f,fee:r,from:f,amount:r,spender:f})}),W=e.Record({memo:w,icrc1_memo:e.Opt(e.Vec(e.Nat8)),operation:e.Opt(c),created_at_time:g}),B=e.Record({transaction:W,timestamp:g,parent_hash:e.Opt(e.Vec(e.Nat8))}),A=e.Record({blocks:e.Vec(B)}),E=e.Variant({BadFirstBlockIndex:e.Record({requested_index:l,first_valid_index:l}),Other:e.Record({error_message:e.Text,error_code:e.Nat64})}),v=e.Variant({Ok:A,Err:E}),G=e.Func([_],[v],[]),h=e.Record({certificate:e.Opt(e.Vec(e.Nat8)),blocks:e.Vec(B),chain_length:e.Nat64,first_block_index:l,archived_blocks:e.Vec(e.Record({callback:G,start:l,length:e.Nat64}))}),k=e.Record({account:f}),x=e.Record({account:s}),T=e.Record({canister_id:e.Principal}),V=e.Record({archives:e.Vec(T)}),R=e.Nat,U=e.Variant({Int:e.Int,Nat:e.Nat,Blob:e.Vec(e.Nat8),Text:e.Text}),M=e.Nat64,K=e.Record({to:n,fee:e.Opt(R),memo:e.Opt(e.Vec(e.Nat8)),from_subaccount:e.Opt(t),created_at_time:e.Opt(M),amount:R}),C=e.Nat,j=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),TemporarilyUnavailable:e.Null,BadBurn:e.Record({min_burn_amount:R}),Duplicate:e.Record({duplicate_of:C}),BadFee:e.Record({expected_fee:R}),CreatedInFuture:e.Record({ledger_time:e.Nat64}),TooOld:e.Null,InsufficientFunds:e.Record({balance:R})}),z=e.Variant({Ok:C,Err:j}),$=e.Record({to:s,fee:r,memo:w,from_subaccount:e.Opt(t),created_at_time:e.Opt(g),amount:r}),J=e.Record({to:f,fee:r,memo:w,from_subaccount:e.Opt(t),created_at_time:e.Opt(g),amount:r}),Q=e.Variant({TxTooOld:e.Record({allowed_window_nanos:e.Nat64}),BadFee:e.Record({expected_fee:r}),TxDuplicate:e.Record({duplicate_of:l}),TxCreatedInFuture:e.Null,InsufficientFunds:e.Record({balance:r})}),X=e.Variant({Ok:l,Err:Q}),F=e.Record({}),Y=e.Record({transfer_fee:r});return e.Service({_blocks:e.Func([_],[h],[]),account_balance:e.Func([k],[r],[]),account_balance_dfx:e.Func([x],[r],[]),archives:e.Func([],[V],[]),decimals:e.Func([],[e.Record({decimals:e.Nat32})],[]),icrc1_balance_of:e.Func([n],[R],[]),icrc1_decimals:e.Func([],[e.Nat8],[]),icrc1_fee:e.Func([],[R],[]),icrc1_metadata:e.Func([],[e.Vec(e.Tuple(e.Text,U))],[]),icrc1_minting_account:e.Func([],[e.Opt(n)],[]),icrc1_name:e.Func([],[e.Text],[]),icrc1_supported_standards:e.Func([],[e.Vec(e.Record({url:e.Text,name:e.Text}))],[]),icrc1_symbol:e.Func([],[e.Text],[]),icrc1_total_supply:e.Func([],[R],[]),icrc1_transfer:e.Func([K],[z],[]),name:e.Func([],[e.Record({name:e.Text})],[]),send_dfx:e.Func([$],[l],[]),symbol:e.Func([],[e.Record({symbol:e.Text})],[]),transfer:e.Func([J],[X],[]),transfer_fee:e.Func([F],[Y],[])})};var tr=({IDL:e})=>{let t=e.Vec(e.Nat8),n=e.Record({owner:e.Principal,subaccount:e.Opt(t)}),o=e.Record({maximum_number_of_accounts:e.Opt(e.Nat64),icrc1_minting_account:e.Opt(n)}),r=e.Record({e8s:e.Nat64}),s=e.Text,a=e.Record({secs:e.Nat64,nanos:e.Nat32}),d=e.Record({num_blocks_to_archive:e.Nat64,trigger_threshold:e.Nat64,max_message_size_bytes:e.Opt(e.Nat64),cycles_for_archive_creation:e.Opt(e.Nat64),node_max_memory_size_bytes:e.Opt(e.Nat64),controller_id:e.Principal}),p=e.Record({send_whitelist:e.Vec(e.Principal),token_symbol:e.Opt(e.Text),transfer_fee:e.Opt(r),minting_account:s,transaction_window:e.Opt(a),max_message_size_bytes:e.Opt(e.Nat64),icrc1_minting_account:e.Opt(n),archive_options:e.Opt(d),initial_values:e.Vec(e.Tuple(s,r)),token_name:e.Opt(e.Text)}),N=e.Variant({Upgrade:e.Opt(o),Init:p}),l=e.Vec(e.Nat8),_=e.Record({account:l}),w=e.Record({account:s}),f=e.Record({canister_id:e.Principal}),g=e.Record({archives:e.Vec(f)}),c=e.Nat,W=e.Variant({Int:e.Int,Nat:e.Nat,Blob:e.Vec(e.Nat8),Text:e.Text}),B=e.Nat64,A=e.Record({to:n,fee:e.Opt(c),memo:e.Opt(e.Vec(e.Nat8)),from_subaccount:e.Opt(t),created_at_time:e.Opt(B),amount:c}),E=e.Nat,v=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),TemporarilyUnavailable:e.Null,BadBurn:e.Record({min_burn_amount:c}),Duplicate:e.Record({duplicate_of:E}),BadFee:e.Record({expected_fee:c}),CreatedInFuture:e.Record({ledger_time:e.Nat64}),TooOld:e.Null,InsufficientFunds:e.Record({balance:c})}),G=e.Variant({Ok:E,Err:v}),h=e.Nat64,k=e.Record({start:h,length:e.Nat64}),x=e.Nat64,T=e.Record({timestamp_nanos:e.Nat64}),V=e.Variant({Approve:e.Record({fee:r,from:l,allowance_e8s:e.Int,expires_at:e.Opt(T),spender:l}),Burn:e.Record({from:l,amount:r}),Mint:e.Record({to:l,amount:r}),Transfer:e.Record({to:l,fee:r,from:l,amount:r}),TransferFrom:e.Record({to:l,fee:r,from:l,amount:r,spender:l})}),R=e.Record({memo:x,icrc1_memo:e.Opt(e.Vec(e.Nat8)),operation:e.Opt(V),created_at_time:T}),U=e.Record({transaction:R,timestamp:T,parent_hash:e.Opt(e.Vec(e.Nat8))}),M=e.Record({blocks:e.Vec(U)}),K=e.Variant({BadFirstBlockIndex:e.Record({requested_index:h,first_valid_index:h}),Other:e.Record({error_message:e.Text,error_code:e.Nat64})}),C=e.Variant({Ok:M,Err:K}),j=e.Func([k],[C],["query"]),z=e.Record({certificate:e.Opt(e.Vec(e.Nat8)),blocks:e.Vec(U),chain_length:e.Nat64,first_block_index:h,archived_blocks:e.Vec(e.Record({callback:j,start:h,length:e.Nat64}))}),$=e.Record({to:s,fee:r,memo:x,from_subaccount:e.Opt(t),created_at_time:e.Opt(T),amount:r}),J=e.Record({to:l,fee:r,memo:x,from_subaccount:e.Opt(t),created_at_time:e.Opt(T),amount:r}),Q=e.Variant({TxTooOld:e.Record({allowed_window_nanos:e.Nat64}),BadFee:e.Record({expected_fee:r}),TxDuplicate:e.Record({duplicate_of:h}),TxCreatedInFuture:e.Null,InsufficientFunds:e.Record({balance:r})}),X=e.Variant({Ok:h,Err:Q}),F=e.Record({}),Y=e.Record({transfer_fee:r});return e.Service({account_balance:e.Func([_],[r],["query"]),account_balance_dfx:e.Func([w],[r],["query"]),archives:e.Func([],[g],["query"]),decimals:e.Func([],[e.Record({decimals:e.Nat32})],["query"]),icrc1_balance_of:e.Func([n],[c],["query"]),icrc1_decimals:e.Func([],[e.Nat8],["query"]),icrc1_fee:e.Func([],[c],["query"]),icrc1_metadata:e.Func([],[e.Vec(e.Tuple(e.Text,W))],["query"]),icrc1_minting_account:e.Func([],[e.Opt(n)],["query"]),icrc1_name:e.Func([],[e.Text],["query"]),icrc1_supported_standards:e.Func([],[e.Vec(e.Record({url:e.Text,name:e.Text}))],["query"]),icrc1_symbol:e.Func([],[e.Text],["query"]),icrc1_total_supply:e.Func([],[c],["query"]),icrc1_transfer:e.Func([A],[G],[]),name:e.Func([],[e.Record({name:e.Text})],["query"]),query_blocks:e.Func([k],[z],["query"]),send_dfx:e.Func([$],[h],[]),symbol:e.Func([],[e.Record({symbol:e.Text})],["query"]),transfer:e.Func([J],[X],[]),transfer_fee:e.Func([F],[Y],["query"])})};var or=require("@dfinity/utils");var rr=async e=>{let t=new Uint8Array(e).buffer,{Subaccount:n}=await y(),o=new n;return o.setSubAccount(new Uint8Array(t)),o},An=async e=>{let{ICPTs:t}=await y(),n=new t;return n.setE8s(e.toString(10)),n},nr=e=>({e8s:e}),sr=({to:e,amount:t,memo:n,fee:o,fromSubAccount:r,createdAt:s})=>({to:e.toUint8Array(),fee:nr(o??De),amount:nr(t),memo:n??BigInt(0),created_at_time:s!==void 0?[{timestamp_nanos:s}]:[],from_subaccount:r===void 0?[]:[(0,or.arrayOfNumberToUint8Array)(r)]});var Fe=class{constructor(t,n,o,r,s,a,d=!1){this.agent=t;this.canisterId=n;this.service=o;this.certifiedService=r;this.updateFetcher=s;this.queryFetcher=a;this.hardwareWallet=d;this.accountBalance=async({accountIdentifier:t,certified:n=!0})=>this.hardwareWallet?this.accountBalanceHardwareWallet({accountIdentifier:t,certified:n}):(await(n?this.certifiedService:this.service).account_balance({account:t.toUint8Array()})).e8s;this.transactionFee=async()=>{let{transfer_fee:{e8s:t}}=await this.service.transfer_fee({});return t};this.transfer=async t=>{if(this.hardwareWallet)return this.transferHardwareWallet(t);t.fee===void 0&&(t.fee=this.hardwareWallet?De:await this.transactionFee());let n=sr(t),o=await this.certifiedService.transfer(n);if("Err"in o)throw gn(o.Err);return o.Ok};this.accountBalanceHardwareWallet=async({accountIdentifier:t,certified:n=!0})=>{let o=n?this.updateFetcher:this.queryFetcher,{AccountBalanceRequest:r,ICPTs:s}=await y(),a=new r;a.setAccount(await t.toProto());let d=await o({agent:this.agent,canisterId:this.canisterId,methodName:"account_balance_pb",arg:a.serializeBinary()});return BigInt(s.deserializeBinary(new Uint8Array(d)).getE8s())};this.transferHardwareWallet=async({to:t,amount:n,memo:o,fee:r,fromSubAccount:s,createdAt:a})=>{let{SendRequest:d,Payment:p,Memo:N,TimeStamp:l,BlockHeight:_}=await y(),w=new d;w.setTo(await t.toProto());let f=new p;f.setReceiverGets(await An(n)),w.setPayment(f),w.setMaxFee(await An(r??De));let g=new N;if(g.setMemo((o??BigInt(0)).toString()),w.setMemo(g),a!==void 0){let c=new l;c.setTimestampNanos(a.toString()),w.setCreatedAtTime(c)}s!==void 0&&w.setFromSubaccount(await rr(s));try{let c=await this.updateFetcher({agent:this.agent,canisterId:this.canisterId,methodName:"send_pb",arg:w.serializeBinary()});return BigInt(_.deserializeBinary(c).getHeight())}catch(c){throw c instanceof Error?yn(c):c}}}static create(t={}){let n=t.canisterId??Jn,{service:o,certifiedService:r,agent:s}=(0,ar.createServices)({options:{...t,canisterId:n},idlFactory:tr,certifiedIdlFactory:er});return new Fe(s,n,o,r,t.updateCallOverride??Pe,t.queryCallOverride??Bn,t.hardwareWallet)}};var dr=require("@dfinity/utils");var ir=({IDL:e})=>{let t=e.Record({allowed_principals:e.Vec(e.Principal),access_controls_enabled:e.Bool,sns_subnet_ids:e.Vec(e.Principal)}),n=e.Record({wasm:e.Vec(e.Nat8),canister_type:e.Int32}),o=e.Record({hash:e.Vec(e.Nat8),wasm:e.Opt(n)}),r=e.Record({message:e.Text}),s=e.Variant({Error:r,Hash:e.Vec(e.Nat8)}),a=e.Record({result:e.Opt(s)}),d=e.Record({dissolve_delay_interval_seconds:e.Nat64,count:e.Nat64}),p=e.Record({id:e.Opt(e.Principal)}),N=e.Record({canisters:e.Vec(p)}),l=e.Record({nns_neuron_id:e.Nat64,amount_icp_e8s:e.Nat64}),_=e.Record({hotkey_principal:e.Text,cf_neurons:e.Vec(l)}),w=e.Record({participants:e.Vec(_)}),f=e.Record({total_e8s:e.Nat64}),g=e.Record({controller:e.Opt(e.Principal),dissolve_delay_seconds:e.Nat64,memo:e.Nat64,stake_e8s:e.Nat64,vesting_period_seconds:e.Opt(e.Nat64)}),c=e.Record({developer_neurons:e.Vec(g)}),W=e.Record({airdrop_neurons:e.Vec(g)}),B=e.Record({total_e8s:e.Nat64,initial_swap_amount_e8s:e.Nat64}),A=e.Record({treasury_distribution:e.Opt(f),developer_distribution:e.Opt(c),airdrop_distribution:e.Opt(W),swap_distribution:e.Opt(B)}),E=e.Variant({FractionalDeveloperVotingPower:A}),v=e.Record({iso_codes:e.Vec(e.Text)}),G=e.Record({url:e.Opt(e.Text),max_dissolve_delay_seconds:e.Opt(e.Nat64),max_dissolve_delay_bonus_percentage:e.Opt(e.Nat64),nns_proposal_id:e.Opt(e.Nat64),min_participant_icp_e8s:e.Opt(e.Nat64),neuron_basket_construction_parameters:e.Opt(d),fallback_controller_principal_ids:e.Vec(e.Text),token_symbol:e.Opt(e.Text),final_reward_rate_basis_points:e.Opt(e.Nat64),max_icp_e8s:e.Opt(e.Nat64),neuron_minimum_stake_e8s:e.Opt(e.Nat64),confirmation_text:e.Opt(e.Text),logo:e.Opt(e.Text),name:e.Opt(e.Text),swap_start_timestamp_seconds:e.Opt(e.Nat64),swap_due_timestamp_seconds:e.Opt(e.Nat64),initial_voting_period_seconds:e.Opt(e.Nat64),neuron_minimum_dissolve_delay_to_vote_seconds:e.Opt(e.Nat64),description:e.Opt(e.Text),max_neuron_age_seconds_for_age_bonus:e.Opt(e.Nat64),min_participants:e.Opt(e.Nat64),initial_reward_rate_basis_points:e.Opt(e.Nat64),wait_for_quiet_deadline_increase_seconds:e.Opt(e.Nat64),transaction_fee_e8s:e.Opt(e.Nat64),dapp_canisters:e.Opt(N),neurons_fund_participants:e.Opt(w),max_age_bonus_percentage:e.Opt(e.Nat64),initial_token_distribution:e.Opt(E),reward_rate_transition_duration_seconds:e.Opt(e.Nat64),token_logo:e.Opt(e.Text),token_name:e.Opt(e.Text),max_participant_icp_e8s:e.Opt(e.Nat64),proposal_reject_cost_e8s:e.Opt(e.Nat64),restricted_countries:e.Opt(v),min_icp_e8s:e.Opt(e.Nat64)}),h=e.Record({sns_init_payload:e.Opt(G)}),k=e.Record({restored_dapp_canisters:e.Vec(p),nns_controlled_dapp_canisters:e.Vec(p),sns_controlled_dapp_canisters:e.Vec(p)}),x=e.Record({root:e.Opt(e.Principal),swap:e.Opt(e.Principal),ledger:e.Opt(e.Principal),index:e.Opt(e.Principal),governance:e.Opt(e.Principal)}),T=e.Record({dapp_canisters_transfer_result:e.Opt(k),subnet_id:e.Opt(e.Principal),error:e.Opt(r),canisters:e.Opt(x)}),V=e.Record({allowed_principals:e.Vec(e.Principal)}),R=e.Record({archive_wasm_hash:e.Vec(e.Nat8),root_wasm_hash:e.Vec(e.Nat8),swap_wasm_hash:e.Vec(e.Nat8),ledger_wasm_hash:e.Vec(e.Nat8),governance_wasm_hash:e.Vec(e.Nat8),index_wasm_hash:e.Vec(e.Nat8)}),U=e.Record({governance_canister_id:e.Opt(e.Principal),current_version:e.Opt(R)}),M=e.Record({next_version:e.Opt(R)}),K=e.Record({sns_subnet_ids:e.Vec(e.Principal)}),C=e.Record({hash:e.Vec(e.Nat8)}),j=e.Record({wasm:e.Opt(n)}),z=e.Record({next_version:e.Opt(R),current_version:e.Opt(R)}),$=e.Record({upgrade_path:e.Vec(z),sns_governance_canister_id:e.Opt(e.Principal)}),J=e.Record({error:e.Opt(r)}),Q=e.Record({root_canister_id:e.Opt(e.Principal),governance_canister_id:e.Opt(e.Principal),index_canister_id:e.Opt(e.Principal),swap_canister_id:e.Opt(e.Principal),ledger_canister_id:e.Opt(e.Principal)}),X=e.Record({instances:e.Vec(Q)}),F=e.Record({limit:e.Nat32,starting_at:e.Opt(R),sns_governance_canister_id:e.Opt(e.Principal)}),Y=e.Record({archive_wasm_hash:e.Text,root_wasm_hash:e.Text,swap_wasm_hash:e.Text,ledger_wasm_hash:e.Text,governance_wasm_hash:e.Text,index_wasm_hash:e.Text}),i=e.Record({pretty_version:e.Opt(Y),version:e.Opt(R)}),ae=e.Record({steps:e.Vec(i)}),ye=e.Record({added_principals:e.Vec(e.Principal),removed_principals:e.Vec(e.Principal)}),ie=e.Variant({Error:r,AllowedPrincipals:V}),ve=e.Record({update_allowed_principals_result:e.Opt(ie)}),ce=e.Record({sns_subnet_ids_to_add:e.Vec(e.Principal),sns_subnet_ids_to_remove:e.Vec(e.Principal)}),Oe=e.Record({error:e.Opt(r)});return e.Service({add_wasm:e.Func([o],[a],[]),deploy_new_sns:e.Func([h],[T],[]),get_allowed_principals:e.Func([e.Record({})],[V],[]),get_latest_sns_version_pretty:e.Func([e.Null],[e.Vec(e.Tuple(e.Text,e.Text))],[]),get_next_sns_version:e.Func([U],[M],[]),get_sns_subnet_ids:e.Func([e.Record({})],[K],[]),get_wasm:e.Func([C],[j],[]),insert_upgrade_path_entries:e.Func([$],[J],[]),list_deployed_snses:e.Func([e.Record({})],[X],[]),list_upgrade_steps:e.Func([F],[ae],[]),update_allowed_principals:e.Func([ye],[ve],[]),update_sns_subnet_list:e.Func([ce],[Oe],[])})};var cr=({IDL:e})=>{let t=e.Record({allowed_principals:e.Vec(e.Principal),access_controls_enabled:e.Bool,sns_subnet_ids:e.Vec(e.Principal)}),n=e.Record({wasm:e.Vec(e.Nat8),canister_type:e.Int32}),o=e.Record({hash:e.Vec(e.Nat8),wasm:e.Opt(n)}),r=e.Record({message:e.Text}),s=e.Variant({Error:r,Hash:e.Vec(e.Nat8)}),a=e.Record({result:e.Opt(s)}),d=e.Record({dissolve_delay_interval_seconds:e.Nat64,count:e.Nat64}),p=e.Record({id:e.Opt(e.Principal)}),N=e.Record({canisters:e.Vec(p)}),l=e.Record({nns_neuron_id:e.Nat64,amount_icp_e8s:e.Nat64}),_=e.Record({hotkey_principal:e.Text,cf_neurons:e.Vec(l)}),w=e.Record({participants:e.Vec(_)}),f=e.Record({total_e8s:e.Nat64}),g=e.Record({controller:e.Opt(e.Principal),dissolve_delay_seconds:e.Nat64,memo:e.Nat64,stake_e8s:e.Nat64,vesting_period_seconds:e.Opt(e.Nat64)}),c=e.Record({developer_neurons:e.Vec(g)}),W=e.Record({airdrop_neurons:e.Vec(g)}),B=e.Record({total_e8s:e.Nat64,initial_swap_amount_e8s:e.Nat64}),A=e.Record({treasury_distribution:e.Opt(f),developer_distribution:e.Opt(c),airdrop_distribution:e.Opt(W),swap_distribution:e.Opt(B)}),E=e.Variant({FractionalDeveloperVotingPower:A}),v=e.Record({iso_codes:e.Vec(e.Text)}),G=e.Record({url:e.Opt(e.Text),max_dissolve_delay_seconds:e.Opt(e.Nat64),max_dissolve_delay_bonus_percentage:e.Opt(e.Nat64),nns_proposal_id:e.Opt(e.Nat64),min_participant_icp_e8s:e.Opt(e.Nat64),neuron_basket_construction_parameters:e.Opt(d),fallback_controller_principal_ids:e.Vec(e.Text),token_symbol:e.Opt(e.Text),final_reward_rate_basis_points:e.Opt(e.Nat64),max_icp_e8s:e.Opt(e.Nat64),neuron_minimum_stake_e8s:e.Opt(e.Nat64),confirmation_text:e.Opt(e.Text),logo:e.Opt(e.Text),name:e.Opt(e.Text),swap_start_timestamp_seconds:e.Opt(e.Nat64),swap_due_timestamp_seconds:e.Opt(e.Nat64),initial_voting_period_seconds:e.Opt(e.Nat64),neuron_minimum_dissolve_delay_to_vote_seconds:e.Opt(e.Nat64),description:e.Opt(e.Text),max_neuron_age_seconds_for_age_bonus:e.Opt(e.Nat64),min_participants:e.Opt(e.Nat64),initial_reward_rate_basis_points:e.Opt(e.Nat64),wait_for_quiet_deadline_increase_seconds:e.Opt(e.Nat64),transaction_fee_e8s:e.Opt(e.Nat64),dapp_canisters:e.Opt(N),neurons_fund_participants:e.Opt(w),max_age_bonus_percentage:e.Opt(e.Nat64),initial_token_distribution:e.Opt(E),reward_rate_transition_duration_seconds:e.Opt(e.Nat64),token_logo:e.Opt(e.Text),token_name:e.Opt(e.Text),max_participant_icp_e8s:e.Opt(e.Nat64),proposal_reject_cost_e8s:e.Opt(e.Nat64),restricted_countries:e.Opt(v),min_icp_e8s:e.Opt(e.Nat64)}),h=e.Record({sns_init_payload:e.Opt(G)}),k=e.Record({restored_dapp_canisters:e.Vec(p),nns_controlled_dapp_canisters:e.Vec(p),sns_controlled_dapp_canisters:e.Vec(p)}),x=e.Record({root:e.Opt(e.Principal),swap:e.Opt(e.Principal),ledger:e.Opt(e.Principal),index:e.Opt(e.Principal),governance:e.Opt(e.Principal)}),T=e.Record({dapp_canisters_transfer_result:e.Opt(k),subnet_id:e.Opt(e.Principal),error:e.Opt(r),canisters:e.Opt(x)}),V=e.Record({allowed_principals:e.Vec(e.Principal)}),R=e.Record({archive_wasm_hash:e.Vec(e.Nat8),root_wasm_hash:e.Vec(e.Nat8),swap_wasm_hash:e.Vec(e.Nat8),ledger_wasm_hash:e.Vec(e.Nat8),governance_wasm_hash:e.Vec(e.Nat8),index_wasm_hash:e.Vec(e.Nat8)}),U=e.Record({governance_canister_id:e.Opt(e.Principal),current_version:e.Opt(R)}),M=e.Record({next_version:e.Opt(R)}),K=e.Record({sns_subnet_ids:e.Vec(e.Principal)}),C=e.Record({hash:e.Vec(e.Nat8)}),j=e.Record({wasm:e.Opt(n)}),z=e.Record({next_version:e.Opt(R),current_version:e.Opt(R)}),$=e.Record({upgrade_path:e.Vec(z),sns_governance_canister_id:e.Opt(e.Principal)}),J=e.Record({error:e.Opt(r)}),Q=e.Record({root_canister_id:e.Opt(e.Principal),governance_canister_id:e.Opt(e.Principal),index_canister_id:e.Opt(e.Principal),swap_canister_id:e.Opt(e.Principal),ledger_canister_id:e.Opt(e.Principal)}),X=e.Record({instances:e.Vec(Q)}),F=e.Record({limit:e.Nat32,starting_at:e.Opt(R),sns_governance_canister_id:e.Opt(e.Principal)}),Y=e.Record({archive_wasm_hash:e.Text,root_wasm_hash:e.Text,swap_wasm_hash:e.Text,ledger_wasm_hash:e.Text,governance_wasm_hash:e.Text,index_wasm_hash:e.Text}),i=e.Record({pretty_version:e.Opt(Y),version:e.Opt(R)}),ae=e.Record({steps:e.Vec(i)}),ye=e.Record({added_principals:e.Vec(e.Principal),removed_principals:e.Vec(e.Principal)}),ie=e.Variant({Error:r,AllowedPrincipals:V}),ve=e.Record({update_allowed_principals_result:e.Opt(ie)}),ce=e.Record({sns_subnet_ids_to_add:e.Vec(e.Principal),sns_subnet_ids_to_remove:e.Vec(e.Principal)}),Oe=e.Record({error:e.Opt(r)});return e.Service({add_wasm:e.Func([o],[a],[]),deploy_new_sns:e.Func([h],[T],[]),get_allowed_principals:e.Func([e.Record({})],[V],["query"]),get_latest_sns_version_pretty:e.Func([e.Null],[e.Vec(e.Tuple(e.Text,e.Text))],["query"]),get_next_sns_version:e.Func([U],[M],["query"]),get_sns_subnet_ids:e.Func([e.Record({})],[K],["query"]),get_wasm:e.Func([C],[j],["query"]),insert_upgrade_path_entries:e.Func([$],[J],[]),list_deployed_snses:e.Func([e.Record({})],[X],["query"]),list_upgrade_steps:e.Func([F],[ae],["query"]),update_allowed_principals:e.Func([ye],[ve],[]),update_sns_subnet_list:e.Func([ce],[Oe],[])})};var qe=class{constructor(t,n){this.service=t;this.certifiedService=n;this.listSnses=async({certified:t=!0})=>{let n=t?this.certifiedService:this.service,{instances:o}=await n.list_deployed_snses({});return o}}static create(t={}){let{service:n,certifiedService:o}=(0,dr.createServices)({options:{...t,canisterId:t.canisterId??Xn},idlFactory:cr,certifiedIdlFactory:ir});return new qe(n,o)}};var ur=({recentBallots:e,proposalId:t})=>{if(!t)return;let n=e.find(({proposalId:o})=>o===t);return n==null?void 0:n.vote},pr=({neurons:e,proposal:t})=>{let{ballots:n,proposalTimestampSeconds:o}=t;return e.filter(({createdTimestampSeconds:r,neuronId:s})=>{let a=r>o,d=n.find(({neuronId:p})=>p===s)===void 0;return a||d})},ys=({neurons:e,proposal:t})=>{let{id:n}=t;return e.filter(({recentBallots:o,neuronId:r})=>ur({recentBallots:o,proposalId:n})===void 0&&pr({neurons:e,proposal:t}).find(({neuronId:s})=>s===r)===void 0)},vs=({neurons:e,proposal:{id:t}})=>e.filter(({recentBallots:n})=>ur({recentBallots:n,proposalId:t})!==void 0);0&&(module.exports={AccountIdentifier,BadFeeError,CouldNotClaimNeuronError,FeatureNotSupportedError,GenesisTokenCanister,GovernanceCanister,GovernanceError,ICP,InsufficientAmountError,InsufficientFundsError,InvalidAccountIDError,InvalidSenderError,LedgerCanister,NeuronState,NnsFunction,ProposalRewardStatus,ProposalStatus,SnsWasmCanister,StakeNeuronError,SubAccount,Topic,TransferError,TxCreatedInFutureError,TxDuplicateError,TxTooOldError,UnrecognizedTypeError,UnsupportedValueError,Vote,accountIdentifierFromBytes,accountIdentifierToBytes,checkAccountId,ineligibleNeurons,mapTransferError,mapTransferProtoError,principalToAccountIdentifier,votableNeurons,votedNeurons});
/*! Bundled license information:

@noble/hashes/esm/utils.js:
  (*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
*/
//# sourceMappingURL=index.cjs.js.map
