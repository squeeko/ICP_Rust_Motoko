import{a as D}from"./chunk-FCMD5MHU.js";import{c as O}from"./chunk-Q3ETFEQV.js";import{arrayOfNumberToUint8Array as W,asciiStringToByteArray as R,bigEndianCrc32 as _,uint8ArrayToHexString as M}from"@dfinity/utils";function T(e,...t){if(!(e instanceof Uint8Array))throw new Error("Expected Uint8Array");if(t.length>0&&!t.includes(e.length))throw new Error(`Expected Uint8Array of length ${t}, not of length=${e.length}`)}function B(e,t=!0){if(e.destroyed)throw new Error("Hash instance has been destroyed");if(t&&e.finished)throw new Error("Hash#digest() has already been called")}function N(e,t){T(e);let r=t.outputLen;if(e.length<r)throw new Error(`digestInto() expects output buffer of length at least ${r}`)}var P=e=>e instanceof Uint8Array;var m=e=>new DataView(e.buffer,e.byteOffset,e.byteLength),h=(e,t)=>e<<32-t|e>>>t,V=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;if(!V)throw new Error("Non little-endian hardware is not supported");function j(e){if(typeof e!="string")throw new Error(`utf8ToBytes expected string, got ${typeof e}`);return new Uint8Array(new TextEncoder().encode(e))}function I(e){if(typeof e=="string"&&(e=j(e)),!P(e))throw new Error(`expected Uint8Array, got ${typeof e}`);return e}var g=class{clone(){return this._cloneInto()}},q={}.toString;function C(e){let t=n=>e().update(I(n)).digest(),r=e();return t.outputLen=r.outputLen,t.blockLen=r.blockLen,t.create=()=>e(),t}function F(e,t,r,n){if(typeof e.setBigUint64=="function")return e.setBigUint64(t,r,n);let o=BigInt(32),c=BigInt(4294967295),i=Number(r>>o&c),s=Number(r&c),a=n?4:0,u=n?0:4;e.setUint32(t+a,i,n),e.setUint32(t+u,s,n)}var A=class extends g{constructor(t,r,n,o){super(),this.blockLen=t,this.outputLen=r,this.padOffset=n,this.isLE=o,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(t),this.view=m(this.buffer)}update(t){B(this);let{view:r,buffer:n,blockLen:o}=this;t=I(t);let c=t.length;for(let i=0;i<c;){let s=Math.min(o-this.pos,c-i);if(s===o){let a=m(t);for(;o<=c-i;i+=o)this.process(a,i);continue}n.set(t.subarray(i,i+s),this.pos),this.pos+=s,i+=s,this.pos===o&&(this.process(r,0),this.pos=0)}return this.length+=t.length,this.roundClean(),this}digestInto(t){B(this),N(t,this),this.finished=!0;let{buffer:r,view:n,blockLen:o,isLE:c}=this,{pos:i}=this;r[i++]=128,this.buffer.subarray(i).fill(0),this.padOffset>o-i&&(this.process(n,0),i=0);for(let f=i;f<o;f++)r[f]=0;F(n,o-8,BigInt(this.length*8),c),this.process(n,0);let s=m(t),a=this.outputLen;if(a%4)throw new Error("_sha2: outputLen should be aligned to 32bit");let u=a/4,p=this.get();if(u>p.length)throw new Error("_sha2: outputLen bigger than state");for(let f=0;f<u;f++)s.setUint32(4*f,p[f],c)}digest(){let{buffer:t,outputLen:r}=this;this.digestInto(t);let n=t.slice(0,r);return this.destroy(),n}_cloneInto(t){t||(t=new this.constructor),t.set(...this.get());let{blockLen:r,buffer:n,length:o,finished:c,destroyed:i,pos:s}=this;return t.length=o,t.pos=s,t.finished=c,t.destroyed=i,o%r&&t.buffer.set(n),t}};var $=(e,t,r)=>e&t^~e&r,v=(e,t,r)=>e&t^e&r^t&r,G=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),x=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),b=new Uint32Array(64),U=class extends A{constructor(){super(64,32,8,!1),this.A=x[0]|0,this.B=x[1]|0,this.C=x[2]|0,this.D=x[3]|0,this.E=x[4]|0,this.F=x[5]|0,this.G=x[6]|0,this.H=x[7]|0}get(){let{A:t,B:r,C:n,D:o,E:c,F:i,G:s,H:a}=this;return[t,r,n,o,c,i,s,a]}set(t,r,n,o,c,i,s,a){this.A=t|0,this.B=r|0,this.C=n|0,this.D=o|0,this.E=c|0,this.F=i|0,this.G=s|0,this.H=a|0}process(t,r){for(let f=0;f<16;f++,r+=4)b[f]=t.getUint32(r,!1);for(let f=16;f<64;f++){let y=b[f-15],l=b[f-2],k=h(y,7)^h(y,18)^y>>>3,L=h(l,17)^h(l,19)^l>>>10;b[f]=L+b[f-7]+k+b[f-16]|0}let{A:n,B:o,C:c,D:i,E:s,F:a,G:u,H:p}=this;for(let f=0;f<64;f++){let y=h(s,6)^h(s,11)^h(s,25),l=p+y+$(s,a,u)+G[f]+b[f]|0,L=(h(n,2)^h(n,13)^h(n,22))+v(n,o,c)|0;p=u,u=a,a=s,s=i+l|0,i=c,c=o,o=n,n=l+L|0}n=n+this.A|0,o=o+this.B|0,c=c+this.C|0,i=i+this.D|0,s=s+this.E|0,a=a+this.F|0,u=u+this.G|0,p=p+this.H|0,this.set(n,o,c,i,s,a,u,p)}roundClean(){b.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}},H=class extends U{constructor(){super(),this.A=-1056596264,this.B=914150663,this.C=812702999,this.D=-150054599,this.E=-4191439,this.F=1750603025,this.G=1694076839,this.H=-1090891868,this.outputLen=28}},tt=C(()=>new U),S=C(()=>new H);var w=class{constructor(t){this.bytes=t}static fromHex(t){return new w(Uint8Array.from(Buffer.from(t,"hex")))}static fromPrincipal({principal:t,subAccount:r=E.ZERO}){let n=R(`
account-id`),o=S.create();o.update(W([...n,...t.toUint8Array(),...r.toUint8Array()]));let c=o.digest(),i=_(c),s=new Uint8Array([...i,...c]);return new w(s)}async toProto(){let{AccountIdentifier:t}=await D(),r=new t;return r.setHash(this.bytes),r}toHex(){return M(this.bytes)}toUint8Array(){return this.bytes}toNumbers(){return Array.from(this.bytes)}toAccountIdentifierHash(){return{hash:this.toUint8Array()}}},d=class{constructor(t){this.bytes=t}static fromBytes(t){return t.length!=32?Error("Subaccount length must be 32-bytes"):new d(t)}static fromPrincipal(t){let r=new Uint8Array(32).fill(0),n=t.toUint8Array();r[0]=n.length;for(let o=0;o<n.length;o++)r[1+o]=n[o];return new d(r)}static fromID(t){if(t<0||t>255)throw"Subaccount ID must be >= 0 and <= 255";let r=new Uint8Array(32).fill(0);return r[31]=t,new d(r)}toUint8Array(){return this.bytes}},E=d;O(E,"ZERO",d.fromID(0));export{tt as a,S as b,w as c,E as d};
/*! Bundled license information:

@noble/hashes/esm/utils.js:
  (*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
*/
//# sourceMappingURL=chunk-4SFQPNVV.js.map
